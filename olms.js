!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("ol/style/Circle.js"),require("ol/style/Fill.js"),require("ol/style/Icon.js"),require("ol/render/Feature.js"),require("ol/style/Stroke.js"),require("ol/style/Style.js"),require("ol/style/Text.js"),require("ol/render/canvas.js"),require("ol/tileurlfunction.js"),require("ol/util.js"),require("ol/format/GeoJSON.js"),require("ol/layer/Image.js"),require("ol/layer/Layer.js"),require("ol/layer/Group.js"),require("ol/format/MVT.js"),require("ol/Map.js"),require("ol/source/Raster.js"),require("ol/source/Source.js"),require("ol/tilegrid/TileGrid.js"),require("ol/source/TileJSON.js"),require("ol/layer/Tile.js"),require("ol/layer/Vector.js"),require("ol/source/Vector.js"),require("ol/layer/VectorTile.js"),require("ol/source/VectorTile.js"),require("ol/View.js"),require("ol/proj.js"),require("ol/loadingstrategy.js"),require("ol/tilegrid.js"),require("ol/extent.js"),require("ol/events/Event.js"),require("ol/events/EventType.js")):"function"==typeof define&&define.amd?define(["exports","ol/style/Circle.js","ol/style/Fill.js","ol/style/Icon.js","ol/render/Feature.js","ol/style/Stroke.js","ol/style/Style.js","ol/style/Text.js","ol/render/canvas.js","ol/tileurlfunction.js","ol/util.js","ol/format/GeoJSON.js","ol/layer/Image.js","ol/layer/Layer.js","ol/layer/Group.js","ol/format/MVT.js","ol/Map.js","ol/source/Raster.js","ol/source/Source.js","ol/tilegrid/TileGrid.js","ol/source/TileJSON.js","ol/layer/Tile.js","ol/layer/Vector.js","ol/source/Vector.js","ol/layer/VectorTile.js","ol/source/VectorTile.js","ol/View.js","ol/proj.js","ol/loadingstrategy.js","ol/tilegrid.js","ol/extent.js","ol/events/Event.js","ol/events/EventType.js"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).olms={},e.ol.style.Circle,e.ol.style.Fill,e.ol.style.Icon,e.ol.render.Feature,e.ol.style.Stroke,e.ol.style.Style,e.ol.style.Text,e.ol.render.canvas,e.ol.tileurlfunction,e.ol.util,e.ol.format.GeoJSON,e.ol.layer.Image,e.ol.layer.Layer,e.ol.layer.Group,e.ol.format.MVT,e.ol.Map,e.ol.source.Raster,e.ol.source.Source,e.ol.tilegrid.TileGrid,e.ol.source.TileJSON,e.ol.layer.Tile,e.ol.layer.Vector,e.ol.source.Vector,e.ol.layer.VectorTile,e.ol.source.VectorTile,e.ol.View,e.ol.proj,e.ol.loadingstrategy,e.ol.tilegrid,e.ol.extent,e.ol.events.Event,e.ol.events.EventType)}(this,(function(e,t,r,n,o,i,a,s,l,u,p,c,f,d,m,y,h,g,v,b,x,w,k,z,M,S,j,q,T,E,$,_,C){"use strict";function I(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var A=I(t),F=I(r),P=I(n),D=I(o),O=I(i),R=I(a),L=I(s),N=I(c),U=I(f),V=I(d),G=I(m),W=I(y),J=I(h),Z=I(g),B=I(v),X=I(b),H=I(x),Y=I(w),K=I(k),Q=I(z),ee=I(M),te=I(S),re=I(j),ne=I(_),oe=I(C);function ie(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var ae,se={transparent:[0,0,0,0],aliceblue:[240,248,255,1],antiquewhite:[250,235,215,1],aqua:[0,255,255,1],aquamarine:[127,255,212,1],azure:[240,255,255,1],beige:[245,245,220,1],bisque:[255,228,196,1],black:[0,0,0,1],blanchedalmond:[255,235,205,1],blue:[0,0,255,1],blueviolet:[138,43,226,1],brown:[165,42,42,1],burlywood:[222,184,135,1],cadetblue:[95,158,160,1],chartreuse:[127,255,0,1],chocolate:[210,105,30,1],coral:[255,127,80,1],cornflowerblue:[100,149,237,1],cornsilk:[255,248,220,1],crimson:[220,20,60,1],cyan:[0,255,255,1],darkblue:[0,0,139,1],darkcyan:[0,139,139,1],darkgoldenrod:[184,134,11,1],darkgray:[169,169,169,1],darkgreen:[0,100,0,1],darkgrey:[169,169,169,1],darkkhaki:[189,183,107,1],darkmagenta:[139,0,139,1],darkolivegreen:[85,107,47,1],darkorange:[255,140,0,1],darkorchid:[153,50,204,1],darkred:[139,0,0,1],darksalmon:[233,150,122,1],darkseagreen:[143,188,143,1],darkslateblue:[72,61,139,1],darkslategray:[47,79,79,1],darkslategrey:[47,79,79,1],darkturquoise:[0,206,209,1],darkviolet:[148,0,211,1],deeppink:[255,20,147,1],deepskyblue:[0,191,255,1],dimgray:[105,105,105,1],dimgrey:[105,105,105,1],dodgerblue:[30,144,255,1],firebrick:[178,34,34,1],floralwhite:[255,250,240,1],forestgreen:[34,139,34,1],fuchsia:[255,0,255,1],gainsboro:[220,220,220,1],ghostwhite:[248,248,255,1],gold:[255,215,0,1],goldenrod:[218,165,32,1],gray:[128,128,128,1],green:[0,128,0,1],greenyellow:[173,255,47,1],grey:[128,128,128,1],honeydew:[240,255,240,1],hotpink:[255,105,180,1],indianred:[205,92,92,1],indigo:[75,0,130,1],ivory:[255,255,240,1],khaki:[240,230,140,1],lavender:[230,230,250,1],lavenderblush:[255,240,245,1],lawngreen:[124,252,0,1],lemonchiffon:[255,250,205,1],lightblue:[173,216,230,1],lightcoral:[240,128,128,1],lightcyan:[224,255,255,1],lightgoldenrodyellow:[250,250,210,1],lightgray:[211,211,211,1],lightgreen:[144,238,144,1],lightgrey:[211,211,211,1],lightpink:[255,182,193,1],lightsalmon:[255,160,122,1],lightseagreen:[32,178,170,1],lightskyblue:[135,206,250,1],lightslategray:[119,136,153,1],lightslategrey:[119,136,153,1],lightsteelblue:[176,196,222,1],lightyellow:[255,255,224,1],lime:[0,255,0,1],limegreen:[50,205,50,1],linen:[250,240,230,1],magenta:[255,0,255,1],maroon:[128,0,0,1],mediumaquamarine:[102,205,170,1],mediumblue:[0,0,205,1],mediumorchid:[186,85,211,1],mediumpurple:[147,112,219,1],mediumseagreen:[60,179,113,1],mediumslateblue:[123,104,238,1],mediumspringgreen:[0,250,154,1],mediumturquoise:[72,209,204,1],mediumvioletred:[199,21,133,1],midnightblue:[25,25,112,1],mintcream:[245,255,250,1],mistyrose:[255,228,225,1],moccasin:[255,228,181,1],navajowhite:[255,222,173,1],navy:[0,0,128,1],oldlace:[253,245,230,1],olive:[128,128,0,1],olivedrab:[107,142,35,1],orange:[255,165,0,1],orangered:[255,69,0,1],orchid:[218,112,214,1],palegoldenrod:[238,232,170,1],palegreen:[152,251,152,1],paleturquoise:[175,238,238,1],palevioletred:[219,112,147,1],papayawhip:[255,239,213,1],peachpuff:[255,218,185,1],peru:[205,133,63,1],pink:[255,192,203,1],plum:[221,160,221,1],powderblue:[176,224,230,1],purple:[128,0,128,1],rebeccapurple:[102,51,153,1],red:[255,0,0,1],rosybrown:[188,143,143,1],royalblue:[65,105,225,1],saddlebrown:[139,69,19,1],salmon:[250,128,114,1],sandybrown:[244,164,96,1],seagreen:[46,139,87,1],seashell:[255,245,238,1],sienna:[160,82,45,1],silver:[192,192,192,1],skyblue:[135,206,235,1],slateblue:[106,90,205,1],slategray:[112,128,144,1],slategrey:[112,128,144,1],snow:[255,250,250,1],springgreen:[0,255,127,1],steelblue:[70,130,180,1],tan:[210,180,140,1],teal:[0,128,128,1],thistle:[216,191,216,1],tomato:[255,99,71,1],turquoise:[64,224,208,1],violet:[238,130,238,1],wheat:[245,222,179,1],white:[255,255,255,1],whitesmoke:[245,245,245,1],yellow:[255,255,0,1],yellowgreen:[154,205,50,1]};function le(e){return(e=Math.round(e))<0?0:e>255?255:e}function ue(e){return e<0?0:e>1?1:e}function pe(e){return"%"===e[e.length-1]?le(parseFloat(e)/100*255):le(parseInt(e))}function ce(e){return"%"===e[e.length-1]?ue(parseFloat(e)/100):ue(parseFloat(e))}function fe(e,t,r){return r<0?r+=1:r>1&&(r-=1),6*r<1?e+(t-e)*r*6:2*r<1?t:3*r<2?e+(t-e)*(2/3-r)*6:e}try{ae={}.parseCSSColor=function(e){var t,r=e.replace(/ /g,"").toLowerCase();if(r in se)return se[r].slice();if("#"===r[0])return 4===r.length?(t=parseInt(r.substr(1),16))>=0&&t<=4095?[(3840&t)>>4|(3840&t)>>8,240&t|(240&t)>>4,15&t|(15&t)<<4,1]:null:7===r.length&&(t=parseInt(r.substr(1),16))>=0&&t<=16777215?[(16711680&t)>>16,(65280&t)>>8,255&t,1]:null;var n=r.indexOf("("),o=r.indexOf(")");if(-1!==n&&o+1===r.length){var i=r.substr(0,n),a=r.substr(n+1,o-(n+1)).split(","),s=1;switch(i){case"rgba":if(4!==a.length)return null;s=ce(a.pop());case"rgb":return 3!==a.length?null:[pe(a[0]),pe(a[1]),pe(a[2]),s];case"hsla":if(4!==a.length)return null;s=ce(a.pop());case"hsl":if(3!==a.length)return null;var l=(parseFloat(a[0])%360+360)%360/360,u=ce(a[1]),p=ce(a[2]),c=p<=.5?p*(u+1):p+u-p*u,f=2*p-c;return[le(255*fe(f,c,l+1/3)),le(255*fe(f,c,l)),le(255*fe(f,c,l-1/3)),s];default:return null}}return null}}catch(e){}class de{constructor(e,t,r,n=1){this.r=e,this.g=t,this.b=r,this.a=n}static parse(e){if(!e)return;if(e instanceof de)return e;if("string"!=typeof e)return;const t=ae(e);return t?new de(t[0]/255*t[3],t[1]/255*t[3],t[2]/255*t[3],t[3]):void 0}toString(){const[e,t,r,n]=this.toArray();return`rgba(${Math.round(e)},${Math.round(t)},${Math.round(r)},${n})`}toArray(){const{r:e,g:t,b:r,a:n}=this;return 0===n?[0,0,0,0]:[255*e/n,255*t/n,255*r/n,n]}toArray01(){const{r:e,g:t,b:r,a:n}=this;return 0===n?[0,0,0,0]:[e/n,t/n,r/n,n]}toArray01PremultipliedAlpha(){const{r:e,g:t,b:r,a:n}=this;return[e,t,r,n]}}de.black=new de(0,0,0,1),de.white=new de(1,1,1,1),de.transparent=new de(0,0,0,0),de.red=new de(1,0,0,1),de.blue=new de(0,0,1,1);var me=de;function ye(e){return"object"==typeof e?["literal",e]:e}function he(e,t){let r=e.stops;if(!r)return function(e,t){const r=["get",e.property];if(void 0===e.default)return"string"===t.type?["string",r]:r;if("enum"===t.type)return["match",r,Object.keys(t.values),r,e.default];{const n=["color"===t.type?"to-color":t.type,r,ye(e.default)];return"array"===t.type&&n.splice(1,0,t.value,t.length||null),n}}(e,t);const n=r&&"object"==typeof r[0][0],o=n||void 0!==e.property,i=n||!o;return r=r.map((e=>!o&&t.tokens&&"string"==typeof e[1]?[e[0],ze(e[1])]:[e[0],ye(e[1])])),n?function(e,t,r){const n={},o={},i=[];for(let t=0;t<r.length;t++){const a=r[t],s=a[0].zoom;void 0===n[s]&&(n[s]={zoom:s,type:e.type,property:e.property,default:e.default},o[s]=[],i.push(s)),o[s].push([a[0].value,a[1]])}const a=ke({},t);if("exponential"===a){const r=[ge(e),["linear"],["zoom"]];for(const e of i){we(r,e,be(n[e],t,o[e]),!1)}return r}{const e=["step",["zoom"]];for(const r of i){we(e,r,be(n[r],t,o[r]),!0)}return xe(e),e}}(e,t,r):i?function(e,t,r,n=["zoom"]){const o=ke(e,t);let i,a=!1;if("interval"===o)i=["step",n],a=!0;else{if("exponential"!==o)throw new Error(`Unknown zoom function type "${o}"`);{const t=void 0!==e.base?e.base:1;i=[ge(e),1===t?["linear"]:["exponential",t],n]}}for(const e of r)we(i,e[0],e[1],a);return xe(i),i}(e,t,r):be(e,t,r)}function ge(e){switch(e.colorSpace){case"hcl":return"interpolate-hcl";case"lab":return"interpolate-lab";default:return"interpolate"}}function ve(e,t){const r=ye((n=e.default,o=t.default,void 0!==n?n:void 0!==o?o:void 0));var n,o;return void 0===r&&"resolvedImage"===t.type?"":r}function be(e,t,r){const n=ke(e,t),o=["get",e.property];if("categorical"===n&&"boolean"==typeof r[0][0]){const n=["case"];for(const e of r)n.push(["==",o,e[0]],e[1]);return n.push(ve(e,t)),n}if("categorical"===n){const n=["match",o];for(const e of r)we(n,e[0],e[1],!1);return n.push(ve(e,t)),n}if("interval"===n){const t=["step",["number",o]];for(const e of r)we(t,e[0],e[1],!0);return xe(t),void 0===e.default?t:["case",["==",["typeof",o],"number"],t,ye(e.default)]}if("exponential"===n){const t=void 0!==e.base?e.base:1,n=[ge(e),1===t?["linear"]:["exponential",t],["number",o]];for(const e of r)we(n,e[0],e[1],!1);return void 0===e.default?n:["case",["==",["typeof",o],"number"],n,ye(e.default)]}throw new Error(`Unknown property function type ${n}`)}function xe(e){"step"===e[0]&&3===e.length&&(e.push(0),e.push(e[3]))}function we(e,t,r,n){e.length>3&&t===e[e.length-2]||(n&&2===e.length||e.push(t),e.push(r))}function ke(e,t){return e.type?e.type:t.expression.interpolated?"exponential":"interval"}function ze(e){const t=["concat"],r=/{([^{}]+)}/g;let n=0;for(let o=r.exec(e);null!==o;o=r.exec(e)){const i=e.slice(n,r.lastIndex-o[0].length);n=r.lastIndex,i.length>0&&t.push(i),t.push(["get",o[1]])}if(1===t.length)return e;if(n<e.length)t.push(e.slice(n));else if(2===t.length)return["to-string",t[1]];return t}class Me extends Error{constructor(e,t){super(t),this.message=t,this.key=e}}var Se=Me;class je{constructor(e,t=[]){this.parent=e,this.bindings={};for(const[e,r]of t)this.bindings[e]=r}concat(e){return new je(this,e)}get(e){if(this.bindings[e])return this.bindings[e];if(this.parent)return this.parent.get(e);throw new Error(`${e} not found in scope.`)}has(e){return!!this.bindings[e]||!!this.parent&&this.parent.has(e)}}var qe=je;const Te={kind:"null"},Ee={kind:"number"},$e={kind:"string"},_e={kind:"boolean"},Ce={kind:"color"},Ie={kind:"object"},Ae={kind:"value"},Fe={kind:"collator"},Pe={kind:"formatted"},De={kind:"resolvedImage"};function Oe(e,t){return{kind:"array",itemType:e,N:t}}function Re(e){if("array"===e.kind){const t=Re(e.itemType);return"number"==typeof e.N?`array<${t}, ${e.N}>`:"value"===e.itemType.kind?"array":`array<${t}>`}return e.kind}const Le=[Te,Ee,$e,_e,Ce,Pe,Ie,Oe(Ae),De];function Ne(e,t){if("error"===t.kind)return null;if("array"===e.kind){if("array"===t.kind&&(0===t.N&&"value"===t.itemType.kind||!Ne(e.itemType,t.itemType))&&("number"!=typeof e.N||e.N===t.N))return null}else{if(e.kind===t.kind)return null;if("value"===e.kind)for(const e of Le)if(!Ne(e,t))return null}return`Expected ${Re(e)} but found ${Re(t)} instead.`}function Ue(e,t){return t.some((t=>t.kind===e.kind))}function Ve(e,t){return t.some((t=>"null"===t?null===e:"array"===t?Array.isArray(e):"object"===t?e&&!Array.isArray(e)&&"object"==typeof e:t===typeof e))}class Ge{constructor(e,t,r){this.sensitivity=e?t?"variant":"case":t?"accent":"base",this.locale=r,this.collator=new Intl.Collator(this.locale?this.locale:[],{sensitivity:this.sensitivity,usage:"search"})}compare(e,t){return this.collator.compare(e,t)}resolvedLocale(){return new Intl.Collator(this.locale?this.locale:[]).resolvedOptions().locale}}class We{constructor(e,t,r,n,o){this.text=e.normalize?e.normalize():e,this.image=t,this.scale=r,this.fontStack=n,this.textColor=o}}class Je{constructor(e){this.sections=e}static fromString(e){return new Je([new We(e,null,null,null,null)])}isEmpty(){return 0===this.sections.length||!this.sections.some((e=>0!==e.text.length||e.image&&0!==e.image.name.length))}static factory(e){return e instanceof Je?e:Je.fromString(e)}toString(){return 0===this.sections.length?"":this.sections.map((e=>e.text)).join("")}serialize(){const e=["format"];for(const t of this.sections){if(t.image){e.push(["image",t.image.name]);continue}e.push(t.text);const r={};t.fontStack&&(r["text-font"]=["literal",t.fontStack.split(",")]),t.scale&&(r["font-scale"]=t.scale),t.textColor&&(r["text-color"]=["rgba"].concat(t.textColor.toArray())),e.push(r)}return e}}class Ze{constructor(e){this.name=e.name,this.available=e.available}toString(){return this.name}static fromString(e){return e?new Ze({name:e,available:!1}):null}serialize(){return["image",this.name]}}function Be(e,t,r,n){if(!("number"==typeof e&&e>=0&&e<=255&&"number"==typeof t&&t>=0&&t<=255&&"number"==typeof r&&r>=0&&r<=255)){return`Invalid rgba value [${("number"==typeof n?[e,t,r,n]:[e,t,r]).join(", ")}]: 'r', 'g', and 'b' must be between 0 and 255.`}return void 0===n||"number"==typeof n&&n>=0&&n<=1?null:`Invalid rgba value [${[e,t,r,n].join(", ")}]: 'a' must be between 0 and 1.`}function Xe(e){if(null===e)return!0;if("string"==typeof e)return!0;if("boolean"==typeof e)return!0;if("number"==typeof e)return!0;if(e instanceof me)return!0;if(e instanceof Ge)return!0;if(e instanceof Je)return!0;if(e instanceof Ze)return!0;if(Array.isArray(e)){for(const t of e)if(!Xe(t))return!1;return!0}if("object"==typeof e){for(const t in e)if(!Xe(e[t]))return!1;return!0}return!1}function He(e){if(null===e)return Te;if("string"==typeof e)return $e;if("boolean"==typeof e)return _e;if("number"==typeof e)return Ee;if(e instanceof me)return Ce;if(e instanceof Ge)return Fe;if(e instanceof Je)return Pe;if(e instanceof Ze)return De;if(Array.isArray(e)){const t=e.length;let r;for(const t of e){const e=He(t);if(r){if(r===e)continue;r=Ae;break}r=e}return Oe(r||Ae,t)}return Ie}function Ye(e){const t=typeof e;return null===e?"":"string"===t||"number"===t||"boolean"===t?String(e):e instanceof me||e instanceof Je||e instanceof Ze?e.toString():JSON.stringify(e)}class Ke{constructor(e,t){this.type=e,this.value=t}static parse(e,t){if(2!==e.length)return t.error(`'literal' expression requires exactly one argument, but found ${e.length-1} instead.`);if(!Xe(e[1]))return t.error("invalid value");const r=e[1];let n=He(r);const o=t.expectedType;return"array"!==n.kind||0!==n.N||!o||"array"!==o.kind||"number"==typeof o.N&&0!==o.N||(n=o),new Ke(n,r)}evaluate(){return this.value}eachChild(){}outputDefined(){return!0}serialize(){return"array"===this.type.kind||"object"===this.type.kind?["literal",this.value]:this.value instanceof me?["rgba"].concat(this.value.toArray()):this.value instanceof Je?this.value.serialize():this.value}}var Qe=Ke;var et=class{constructor(e){this.name="ExpressionEvaluationError",this.message=e}toJSON(){return this.message}};const tt={string:$e,number:Ee,boolean:_e,object:Ie};class rt{constructor(e,t){this.type=e,this.args=t}static parse(e,t){if(e.length<2)return t.error("Expected at least one argument.");let r,n=1;const o=e[0];if("array"===o){let o,i;if(e.length>2){const r=e[1];if("string"!=typeof r||!(r in tt)||"object"===r)return t.error('The item type argument of "array" must be one of string, number, boolean',1);o=tt[r],n++}else o=Ae;if(e.length>3){if(null!==e[2]&&("number"!=typeof e[2]||e[2]<0||e[2]!==Math.floor(e[2])))return t.error('The length argument to "array" must be a positive integer literal',2);i=e[2],n++}r=Oe(o,i)}else r=tt[o];const i=[];for(;n<e.length;n++){const r=t.parse(e[n],n,Ae);if(!r)return null;i.push(r)}return new rt(r,i)}evaluate(e){for(let t=0;t<this.args.length;t++){const r=this.args[t].evaluate(e);if(!Ne(this.type,He(r)))return r;if(t===this.args.length-1)throw new et(`Expected value to be of type ${Re(this.type)}, but found ${Re(He(r))} instead.`)}return null}eachChild(e){this.args.forEach(e)}outputDefined(){return this.args.every((e=>e.outputDefined()))}serialize(){const e=this.type,t=[e.kind];if("array"===e.kind){const r=e.itemType;if("string"===r.kind||"number"===r.kind||"boolean"===r.kind){t.push(r.kind);const n=e.N;("number"==typeof n||this.args.length>1)&&t.push(n)}}return t.concat(this.args.map((e=>e.serialize())))}}var nt=rt;class ot{constructor(e){this.type=Pe,this.sections=e}static parse(e,t){if(e.length<2)return t.error("Expected at least one argument.");const r=e[1];if(!Array.isArray(r)&&"object"==typeof r)return t.error("First argument must be an image or text section.");const n=[];let o=!1;for(let r=1;r<=e.length-1;++r){const i=e[r];if(o&&"object"==typeof i&&!Array.isArray(i)){o=!1;let e=null;if(i["font-scale"]&&(e=t.parse(i["font-scale"],1,Ee),!e))return null;let r=null;if(i["text-font"]&&(r=t.parse(i["text-font"],1,Oe($e)),!r))return null;let a=null;if(i["text-color"]&&(a=t.parse(i["text-color"],1,Ce),!a))return null;const s=n[n.length-1];s.scale=e,s.font=r,s.textColor=a}else{const i=t.parse(e[r],1,Ae);if(!i)return null;const a=i.type.kind;if("string"!==a&&"value"!==a&&"null"!==a&&"resolvedImage"!==a)return t.error("Formatted text type must be 'string', 'value', 'image' or 'null'.");o=!0,n.push({content:i,scale:null,font:null,textColor:null})}}return new ot(n)}evaluate(e){return new Je(this.sections.map((t=>{const r=t.content.evaluate(e);return He(r)===De?new We("",r,null,null,null):new We(Ye(r),null,t.scale?t.scale.evaluate(e):null,t.font?t.font.evaluate(e).join(","):null,t.textColor?t.textColor.evaluate(e):null)})))}eachChild(e){for(const t of this.sections)e(t.content),t.scale&&e(t.scale),t.font&&e(t.font),t.textColor&&e(t.textColor)}outputDefined(){return!1}serialize(){const e=["format"];for(const t of this.sections){e.push(t.content.serialize());const r={};t.scale&&(r["font-scale"]=t.scale.serialize()),t.font&&(r["text-font"]=t.font.serialize()),t.textColor&&(r["text-color"]=t.textColor.serialize()),e.push(r)}return e}}class it{constructor(e){this.type=De,this.input=e}static parse(e,t){if(2!==e.length)return t.error("Expected two arguments.");const r=t.parse(e[1],1,$e);return r?new it(r):t.error("No image name provided.")}evaluate(e){const t=this.input.evaluate(e),r=Ze.fromString(t);return r&&e.availableImages&&(r.available=e.availableImages.indexOf(t)>-1),r}eachChild(e){e(this.input)}outputDefined(){return!1}serialize(){return["image",this.input.serialize()]}}const at={"to-boolean":_e,"to-color":Ce,"to-number":Ee,"to-string":$e};class st{constructor(e,t){this.type=e,this.args=t}static parse(e,t){if(e.length<2)return t.error("Expected at least one argument.");const r=e[0];if(("to-boolean"===r||"to-string"===r)&&2!==e.length)return t.error("Expected one argument.");const n=at[r],o=[];for(let r=1;r<e.length;r++){const n=t.parse(e[r],r,Ae);if(!n)return null;o.push(n)}return new st(n,o)}evaluate(e){if("boolean"===this.type.kind)return Boolean(this.args[0].evaluate(e));if("color"===this.type.kind){let t,r;for(const n of this.args){if(t=n.evaluate(e),r=null,t instanceof me)return t;if("string"==typeof t){const r=e.parseColor(t);if(r)return r}else if(Array.isArray(t)&&(r=t.length<3||t.length>4?`Invalid rbga value ${JSON.stringify(t)}: expected an array containing either three or four numeric values.`:Be(t[0],t[1],t[2],t[3]),!r))return new me(t[0]/255,t[1]/255,t[2]/255,t[3])}throw new et(r||`Could not parse color from value '${"string"==typeof t?t:String(JSON.stringify(t))}'`)}if("number"===this.type.kind){let t=null;for(const r of this.args){if(t=r.evaluate(e),null===t)return 0;const n=Number(t);if(!isNaN(n))return n}throw new et(`Could not convert ${JSON.stringify(t)} to number.`)}return"formatted"===this.type.kind?Je.fromString(Ye(this.args[0].evaluate(e))):"resolvedImage"===this.type.kind?Ze.fromString(Ye(this.args[0].evaluate(e))):Ye(this.args[0].evaluate(e))}eachChild(e){this.args.forEach(e)}outputDefined(){return this.args.every((e=>e.outputDefined()))}serialize(){if("formatted"===this.type.kind)return new ot([{content:this.args[0],scale:null,font:null,textColor:null}]).serialize();if("resolvedImage"===this.type.kind)return new it(this.args[0]).serialize();const e=[`to-${this.type.kind}`];return this.eachChild((t=>{e.push(t.serialize())})),e}}var lt=st;const ut=["Unknown","Point","LineString","Polygon"];var pt=class{constructor(){this.globals=null,this.feature=null,this.featureState=null,this.formattedSection=null,this._parseColorCache={},this.availableImages=null,this.canonical=null,this.featureTileCoord=null,this.featureDistanceData=null}id(){return this.feature&&void 0!==this.feature.id?this.feature.id:null}geometryType(){return this.feature?"number"==typeof this.feature.type?ut[this.feature.type]:this.feature.type:null}geometry(){return this.feature&&"geometry"in this.feature?this.feature.geometry:null}canonicalID(){return this.canonical}properties(){return this.feature&&this.feature.properties||{}}distanceFromCenter(){if(this.featureTileCoord&&this.featureDistanceData){const e=this.featureDistanceData.center,t=this.featureDistanceData.scale,{x:r,y:n}=this.featureTileCoord,o=r*t-e[0],i=n*t-e[1];return this.featureDistanceData.bearing[0]*o+this.featureDistanceData.bearing[1]*i}return 0}parseColor(e){let t=this._parseColorCache[e];return t||(t=this._parseColorCache[e]=me.parse(e)),t}};class ct{constructor(e,t,r,n){this.name=e,this.type=t,this._evaluate=r,this.args=n}evaluate(e){return this._evaluate(e,this.args)}eachChild(e){this.args.forEach(e)}outputDefined(){return!1}serialize(){return[this.name].concat(this.args.map((e=>e.serialize())))}static parse(e,t){const r=e[0],n=ct.definitions[r];if(!n)return t.error(`Unknown expression "${r}". If you wanted a literal array, use ["literal", [...]].`,0);const o=Array.isArray(n)?n[0]:n.type,i=Array.isArray(n)?[[n[1],n[2]]]:n.overloads,a=i.filter((([t])=>!Array.isArray(t)||t.length===e.length-1));let s=null;for(const[n,i]of a){s=new Rt(t.registry,t.path,null,t.scope);const a=[];let l=!1;for(let t=1;t<e.length;t++){const r=e[t],o=Array.isArray(n)?n[t-1]:n.type,i=s.parse(r,1+a.length,o);if(!i){l=!0;break}a.push(i)}if(!l)if(Array.isArray(n)&&n.length!==a.length)s.error(`Expected ${n.length} arguments, but found ${a.length} instead.`);else{for(let e=0;e<a.length;e++){const t=Array.isArray(n)?n[e]:n.type,r=a[e];s.concat(e+1).checkSubtype(t,r.type)}if(0===s.errors.length)return new ct(r,o,i,a)}}if(1===a.length)t.errors.push(...s.errors);else{const r=(a.length?a:i).map((([e])=>{return t=e,Array.isArray(t)?`(${t.map(Re).join(", ")})`:`(${Re(t.type)}...)`;var t})).join(" | "),n=[];for(let r=1;r<e.length;r++){const o=t.parse(e[r],1+n.length);if(!o)return null;n.push(Re(o.type))}t.error(`Expected arguments of type ${r}, but found (${n.join(", ")}) instead.`)}return null}static register(e,t){ct.definitions=t;for(const r in t)e[r]=ct}}var ft=ct;class dt{constructor(e,t,r){this.type=Fe,this.locale=r,this.caseSensitive=e,this.diacriticSensitive=t}static parse(e,t){if(2!==e.length)return t.error("Expected one argument.");const r=e[1];if("object"!=typeof r||Array.isArray(r))return t.error("Collator options argument must be an object.");const n=t.parse(void 0!==r["case-sensitive"]&&r["case-sensitive"],1,_e);if(!n)return null;const o=t.parse(void 0!==r["diacritic-sensitive"]&&r["diacritic-sensitive"],1,_e);if(!o)return null;let i=null;return r.locale&&(i=t.parse(r.locale,1,$e),!i)?null:new dt(n,o,i)}evaluate(e){return new Ge(this.caseSensitive.evaluate(e),this.diacriticSensitive.evaluate(e),this.locale?this.locale.evaluate(e):null)}eachChild(e){e(this.caseSensitive),e(this.diacriticSensitive),this.locale&&e(this.locale)}outputDefined(){return!1}serialize(){const e={};return e["case-sensitive"]=this.caseSensitive.serialize(),e["diacritic-sensitive"]=this.diacriticSensitive.serialize(),this.locale&&(e.locale=this.locale.serialize()),["collator",e]}}const mt=8192;function yt(e,t){e[0]=Math.min(e[0],t[0]),e[1]=Math.min(e[1],t[1]),e[2]=Math.max(e[2],t[0]),e[3]=Math.max(e[3],t[1])}function ht(e,t){return!(e[0]<=t[0])&&(!(e[2]>=t[2])&&(!(e[1]<=t[1])&&!(e[3]>=t[3])))}function gt(e,t){const r=(180+e[0])/360;const n=(o=e[1],(180-180/Math.PI*Math.log(Math.tan(Math.PI/4+o*Math.PI/360)))/360);var o;const i=Math.pow(2,t.z);return[Math.round(r*i*mt),Math.round(n*i*mt)]}function vt(e,t,r){const n=e[0]-t[0],o=e[1]-t[1],i=e[0]-r[0],a=e[1]-r[1];return n*a-i*o==0&&n*i<=0&&o*a<=0}function bt(e,t){let r=!1;for(let a=0,s=t.length;a<s;a++){const s=t[a];for(let t=0,a=s.length;t<a-1;t++){if(vt(e,s[t],s[t+1]))return!1;n=e,o=s[t],i=s[t+1],o[1]>n[1]!=i[1]>n[1]&&n[0]<(i[0]-o[0])*(n[1]-o[1])/(i[1]-o[1])+o[0]&&(r=!r)}}var n,o,i;return r}function xt(e,t){for(let r=0;r<t.length;r++)if(bt(e,t[r]))return!0;return!1}function wt(e,t,r,n){const o=e[0]-r[0],i=e[1]-r[1],a=t[0]-r[0],s=t[1]-r[1],l=n[0]-r[0],u=n[1]-r[1],p=o*u-l*i,c=a*u-l*s;return p>0&&c<0||p<0&&c>0}function kt(e,t,r,n){const o=[t[0]-e[0],t[1]-e[1]],i=[n[0]-r[0],n[1]-r[1]];return 0!=(a=i)[0]*(s=o)[1]-a[1]*s[0]&&!(!wt(e,t,r,n)||!wt(r,n,e,t));var a,s}function zt(e,t,r){for(const n of r)for(let r=0;r<n.length-1;++r)if(kt(e,t,n[r],n[r+1]))return!0;return!1}function Mt(e,t){for(let r=0;r<e.length;++r)if(!bt(e[r],t))return!1;for(let r=0;r<e.length-1;++r)if(zt(e[r],e[r+1],t))return!1;return!0}function St(e,t){for(let r=0;r<t.length;r++)if(Mt(e,t[r]))return!0;return!1}function jt(e,t,r){const n=[];for(let o=0;o<e.length;o++){const i=[];for(let n=0;n<e[o].length;n++){const a=gt(e[o][n],r);yt(t,a),i.push(a)}n.push(i)}return n}function qt(e,t,r){const n=[];for(let o=0;o<e.length;o++){const i=jt(e[o],t,r);n.push(i)}return n}function Tt(e,t,r,n){if(e[0]<r[0]||e[0]>r[2]){const t=.5*n;let o=e[0]-r[0]>t?-n:r[0]-e[0]>t?n:0;0===o&&(o=e[0]-r[2]>t?-n:r[2]-e[0]>t?n:0),e[0]+=o}yt(t,e)}function Et(e,t,r,n){const o=Math.pow(2,n.z)*mt,i=[n.x*mt,n.y*mt],a=[];if(!e)return a;for(const n of e)for(const e of n){const n=[e.x+i[0],e.y+i[1]];Tt(n,t,r,o),a.push(n)}return a}function $t(e,t,r,n){const o=Math.pow(2,n.z)*mt,i=[n.x*mt,n.y*mt],a=[];if(!e)return a;for(const r of e){const e=[];for(const n of r){const r=[n.x+i[0],n.y+i[1]];yt(t,r),e.push(r)}a.push(e)}if(t[2]-t[0]<=o/2){(s=t)[0]=s[1]=1/0,s[2]=s[3]=-1/0;for(const e of a)for(const n of e)Tt(n,t,r,o)}var s;return a}class _t{constructor(e,t){this.type=_e,this.geojson=e,this.geometries=t}static parse(e,t){if(2!==e.length)return t.error(`'within' expression requires exactly one argument, but found ${e.length-1} instead.`);if(Xe(e[1])){const t=e[1];if("FeatureCollection"===t.type)for(let e=0;e<t.features.length;++e){const r=t.features[e].geometry.type;if("Polygon"===r||"MultiPolygon"===r)return new _t(t,t.features[e].geometry)}else if("Feature"===t.type){const e=t.geometry.type;if("Polygon"===e||"MultiPolygon"===e)return new _t(t,t.geometry)}else if("Polygon"===t.type||"MultiPolygon"===t.type)return new _t(t,t)}return t.error("'within' expression requires valid geojson object that contains polygon geometry type.")}evaluate(e){if(null!=e.geometry()&&null!=e.canonicalID()){if("Point"===e.geometryType())return function(e,t){const r=[1/0,1/0,-1/0,-1/0],n=[1/0,1/0,-1/0,-1/0],o=e.canonicalID();if(!o)return!1;if("Polygon"===t.type){const i=jt(t.coordinates,n,o),a=Et(e.geometry(),r,n,o);if(!ht(r,n))return!1;for(const e of a)if(!bt(e,i))return!1}if("MultiPolygon"===t.type){const i=qt(t.coordinates,n,o),a=Et(e.geometry(),r,n,o);if(!ht(r,n))return!1;for(const e of a)if(!xt(e,i))return!1}return!0}(e,this.geometries);if("LineString"===e.geometryType())return function(e,t){const r=[1/0,1/0,-1/0,-1/0],n=[1/0,1/0,-1/0,-1/0],o=e.canonicalID();if(!o)return!1;if("Polygon"===t.type){const i=jt(t.coordinates,n,o),a=$t(e.geometry(),r,n,o);if(!ht(r,n))return!1;for(const e of a)if(!Mt(e,i))return!1}if("MultiPolygon"===t.type){const i=qt(t.coordinates,n,o),a=$t(e.geometry(),r,n,o);if(!ht(r,n))return!1;for(const e of a)if(!St(e,i))return!1}return!0}(e,this.geometries)}return!1}eachChild(){}outputDefined(){return!0}serialize(){return["within",this.geojson]}}var Ct=_t;function It(e){if(e instanceof ft){if("get"===e.name&&1===e.args.length)return!1;if("feature-state"===e.name)return!1;if("has"===e.name&&1===e.args.length)return!1;if("properties"===e.name||"geometry-type"===e.name||"id"===e.name)return!1;if(/^filter-/.test(e.name))return!1}if(e instanceof Ct)return!1;let t=!0;return e.eachChild((e=>{t&&!It(e)&&(t=!1)})),t}function At(e){if(e instanceof ft&&"feature-state"===e.name)return!1;let t=!0;return e.eachChild((e=>{t&&!At(e)&&(t=!1)})),t}function Ft(e,t){if(e instanceof ft&&t.indexOf(e.name)>=0)return!1;let r=!0;return e.eachChild((e=>{r&&!Ft(e,t)&&(r=!1)})),r}class Pt{constructor(e,t){this.type=t.type,this.name=e,this.boundExpression=t}static parse(e,t){if(2!==e.length||"string"!=typeof e[1])return t.error("'var' expression requires exactly one string literal argument.");const r=e[1];return t.scope.has(r)?new Pt(r,t.scope.get(r)):t.error(`Unknown variable "${r}". Make sure "${r}" has been bound in an enclosing "let" expression before using it.`,1)}evaluate(e){return this.boundExpression.evaluate(e)}eachChild(){}outputDefined(){return!1}serialize(){return["var",this.name]}}var Dt=Pt;class Ot{constructor(e,t=[],r,n=new qe,o=[]){this.registry=e,this.path=t,this.key=t.map((e=>`[${e}]`)).join(""),this.scope=n,this.errors=o,this.expectedType=r}parse(e,t,r,n,o={}){return t?this.concat(t,r,n)._parse(e,o):this._parse(e,o)}_parse(e,t){function r(e,t,r){return"assert"===r?new nt(t,[e]):"coerce"===r?new lt(t,[e]):e}if(null!==e&&"string"!=typeof e&&"boolean"!=typeof e&&"number"!=typeof e||(e=["literal",e]),Array.isArray(e)){if(0===e.length)return this.error('Expected an array with at least one element. If you wanted a literal array, use ["literal", []].');const n=e[0];if("string"!=typeof n)return this.error(`Expression name must be a string, but found ${typeof n} instead. If you wanted a literal array, use ["literal", [...]].`,0),null;const o=this.registry[n];if(o){let n=o.parse(e,this);if(!n)return null;if(this.expectedType){const e=this.expectedType,o=n.type;if("string"!==e.kind&&"number"!==e.kind&&"boolean"!==e.kind&&"object"!==e.kind&&"array"!==e.kind||"value"!==o.kind)if("color"!==e.kind&&"formatted"!==e.kind&&"resolvedImage"!==e.kind||"value"!==o.kind&&"string"!==o.kind){if(this.checkSubtype(e,o))return null}else n=r(n,e,t.typeAnnotation||"coerce");else n=r(n,e,t.typeAnnotation||"assert")}if(!(n instanceof Qe)&&"resolvedImage"!==n.type.kind&&Lt(n)){const e=new pt;try{n=new Qe(n.type,n.evaluate(e))}catch(e){return this.error(e.message),null}}return n}return this.error(`Unknown expression "${n}". If you wanted a literal array, use ["literal", [...]].`,0)}return void 0===e?this.error("'undefined' value invalid. Use null instead."):"object"==typeof e?this.error('Bare objects invalid. Use ["literal", {...}] instead.'):this.error(`Expected an array, but found ${typeof e} instead.`)}concat(e,t,r){const n="number"==typeof e?this.path.concat(e):this.path,o=r?this.scope.concat(r):this.scope;return new Ot(this.registry,n,t||null,o,this.errors)}error(e,...t){const r=`${this.key}${t.map((e=>`[${e}]`)).join("")}`;this.errors.push(new Se(r,e))}checkSubtype(e,t){const r=Ne(e,t);return r&&this.error(r),r}}var Rt=Ot;function Lt(e){if(e instanceof Dt)return Lt(e.boundExpression);if(e instanceof ft&&"error"===e.name)return!1;if(e instanceof dt)return!1;if(e instanceof Ct)return!1;const t=e instanceof lt||e instanceof nt;let r=!0;return e.eachChild((e=>{r=t?r&&Lt(e):r&&e instanceof Qe})),!!r&&(It(e)&&Ft(e,["zoom","heatmap-density","line-progress","sky-radial-progress","accumulated","is-supported-script","pitch","distance-from-center"]))}function Nt(e,t){const r=e.length-1;let n,o,i=0,a=r,s=0;for(;i<=a;)if(s=Math.floor((i+a)/2),n=e[s],o=e[s+1],n<=t){if(s===r||t<o)return s;i=s+1}else{if(!(n>t))throw new et("Input is not a number.");a=s-1}return 0}class Ut{constructor(e,t,r){this.type=e,this.input=t,this.labels=[],this.outputs=[];for(const[e,t]of r)this.labels.push(e),this.outputs.push(t)}static parse(e,t){if(e.length-1<4)return t.error(`Expected at least 4 arguments, but found only ${e.length-1}.`);if((e.length-1)%2!=0)return t.error("Expected an even number of arguments.");const r=t.parse(e[1],1,Ee);if(!r)return null;const n=[];let o=null;t.expectedType&&"value"!==t.expectedType.kind&&(o=t.expectedType);for(let r=1;r<e.length;r+=2){const i=1===r?-1/0:e[r],a=e[r+1],s=r,l=r+1;if("number"!=typeof i)return t.error('Input/output pairs for "step" expressions must be defined using literal numeric values (not computed expressions) for the input values.',s);if(n.length&&n[n.length-1][0]>=i)return t.error('Input/output pairs for "step" expressions must be arranged with input values in strictly ascending order.',s);const u=t.parse(a,l,o);if(!u)return null;o=o||u.type,n.push([i,u])}return new Ut(o,r,n)}evaluate(e){const t=this.labels,r=this.outputs;if(1===t.length)return r[0].evaluate(e);const n=this.input.evaluate(e);if(n<=t[0])return r[0].evaluate(e);const o=t.length;if(n>=t[o-1])return r[o-1].evaluate(e);return r[Nt(t,n)].evaluate(e)}eachChild(e){e(this.input);for(const t of this.outputs)e(t)}outputDefined(){return this.outputs.every((e=>e.outputDefined()))}serialize(){const e=["step",this.input.serialize()];for(let t=0;t<this.labels.length;t++)t>0&&e.push(this.labels[t]),e.push(this.outputs[t].serialize());return e}}var Vt=Ut,Gt=Wt;function Wt(e,t,r,n){this.cx=3*e,this.bx=3*(r-e)-this.cx,this.ax=1-this.cx-this.bx,this.cy=3*t,this.by=3*(n-t)-this.cy,this.ay=1-this.cy-this.by,this.p1x=e,this.p1y=n,this.p2x=r,this.p2y=n}Wt.prototype.sampleCurveX=function(e){return((this.ax*e+this.bx)*e+this.cx)*e},Wt.prototype.sampleCurveY=function(e){return((this.ay*e+this.by)*e+this.cy)*e},Wt.prototype.sampleCurveDerivativeX=function(e){return(3*this.ax*e+2*this.bx)*e+this.cx},Wt.prototype.solveCurveX=function(e,t){var r,n,o,i,a;for(void 0===t&&(t=1e-6),o=e,a=0;a<8;a++){if(i=this.sampleCurveX(o)-e,Math.abs(i)<t)return o;var s=this.sampleCurveDerivativeX(o);if(Math.abs(s)<1e-6)break;o-=i/s}if((o=e)<(r=0))return r;if(o>(n=1))return n;for(;r<n;){if(i=this.sampleCurveX(o),Math.abs(i-e)<t)return o;e>i?r=o:n=o,o=.5*(n-r)+r}return o},Wt.prototype.solve=function(e,t){return this.sampleCurveY(this.solveCurveX(e,t))};var Jt=ie(Gt);function Zt(e,t,r){return e*(1-r)+t*r}var Bt=Object.freeze({__proto__:null,number:Zt,color:function(e,t,r){return new me(Zt(e.r,t.r,r),Zt(e.g,t.g,r),Zt(e.b,t.b,r),Zt(e.a,t.a,r))},array:function(e,t,r){return e.map(((e,n)=>Zt(e,t[n],r)))}});const Xt=.95047,Ht=1,Yt=1.08883,Kt=4/29,Qt=6/29,er=3*Qt*Qt,tr=Qt*Qt*Qt,rr=Math.PI/180,nr=180/Math.PI;function or(e){return e>tr?Math.pow(e,1/3):e/er+Kt}function ir(e){return e>Qt?e*e*e:er*(e-Kt)}function ar(e){return 255*(e<=.0031308?12.92*e:1.055*Math.pow(e,1/2.4)-.055)}function sr(e){return(e/=255)<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4)}function lr(e){const t=sr(e.r),r=sr(e.g),n=sr(e.b),o=or((.4124564*t+.3575761*r+.1804375*n)/Xt),i=or((.2126729*t+.7151522*r+.072175*n)/Ht);return{l:116*i-16,a:500*(o-i),b:200*(i-or((.0193339*t+.119192*r+.9503041*n)/Yt)),alpha:e.a}}function ur(e){let t=(e.l+16)/116,r=isNaN(e.a)?t:t+e.a/500,n=isNaN(e.b)?t:t-e.b/200;return t=Ht*ir(t),r=Xt*ir(r),n=Yt*ir(n),new me(ar(3.2404542*r-1.5371385*t-.4985314*n),ar(-.969266*r+1.8760108*t+.041556*n),ar(.0556434*r-.2040259*t+1.0572252*n),e.alpha)}function pr(e,t,r){const n=t-e;return e+r*(n>180||n<-180?n-360*Math.round(n/360):n)}const cr={forward:lr,reverse:ur,interpolate:function(e,t,r){return{l:Zt(e.l,t.l,r),a:Zt(e.a,t.a,r),b:Zt(e.b,t.b,r),alpha:Zt(e.alpha,t.alpha,r)}}},fr={forward:function(e){const{l:t,a:r,b:n}=lr(e),o=Math.atan2(n,r)*nr;return{h:o<0?o+360:o,c:Math.sqrt(r*r+n*n),l:t,alpha:e.a}},reverse:function(e){const t=e.h*rr,r=e.c;return ur({l:e.l,a:Math.cos(t)*r,b:Math.sin(t)*r,alpha:e.alpha})},interpolate:function(e,t,r){return{h:pr(e.h,t.h,r),c:Zt(e.c,t.c,r),l:Zt(e.l,t.l,r),alpha:Zt(e.alpha,t.alpha,r)}}};class dr{constructor(e,t,r,n,o){this.type=e,this.operator=t,this.interpolation=r,this.input=n,this.labels=[],this.outputs=[];for(const[e,t]of o)this.labels.push(e),this.outputs.push(t)}static interpolationFactor(e,t,r,n){let o=0;if("exponential"===e.name)o=mr(t,e.base,r,n);else if("linear"===e.name)o=mr(t,1,r,n);else if("cubic-bezier"===e.name){const i=e.controlPoints;o=new Jt(i[0],i[1],i[2],i[3]).solve(mr(t,1,r,n))}return o}static parse(e,t){let[r,n,o,...i]=e;if(!Array.isArray(n)||0===n.length)return t.error("Expected an interpolation type expression.",1);if("linear"===n[0])n={name:"linear"};else if("exponential"===n[0]){const e=n[1];if("number"!=typeof e)return t.error("Exponential interpolation requires a numeric base.",1,1);n={name:"exponential",base:e}}else{if("cubic-bezier"!==n[0])return t.error(`Unknown interpolation type ${String(n[0])}`,1,0);{const e=n.slice(1);if(4!==e.length||e.some((e=>"number"!=typeof e||e<0||e>1)))return t.error("Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.",1);n={name:"cubic-bezier",controlPoints:e}}}if(e.length-1<4)return t.error(`Expected at least 4 arguments, but found only ${e.length-1}.`);if((e.length-1)%2!=0)return t.error("Expected an even number of arguments.");if(o=t.parse(o,2,Ee),!o)return null;const a=[];let s=null;"interpolate-hcl"===r||"interpolate-lab"===r?s=Ce:t.expectedType&&"value"!==t.expectedType.kind&&(s=t.expectedType);for(let e=0;e<i.length;e+=2){const r=i[e],n=i[e+1],o=e+3,l=e+4;if("number"!=typeof r)return t.error('Input/output pairs for "interpolate" expressions must be defined using literal numeric values (not computed expressions) for the input values.',o);if(a.length&&a[a.length-1][0]>=r)return t.error('Input/output pairs for "interpolate" expressions must be arranged with input values in strictly ascending order.',o);const u=t.parse(n,l,s);if(!u)return null;s=s||u.type,a.push([r,u])}return"number"===s.kind||"color"===s.kind||"array"===s.kind&&"number"===s.itemType.kind&&"number"==typeof s.N?new dr(s,r,n,o,a):t.error(`Type ${Re(s)} is not interpolatable.`)}evaluate(e){const t=this.labels,r=this.outputs;if(1===t.length)return r[0].evaluate(e);const n=this.input.evaluate(e);if(n<=t[0])return r[0].evaluate(e);const o=t.length;if(n>=t[o-1])return r[o-1].evaluate(e);const i=Nt(t,n),a=t[i],s=t[i+1],l=dr.interpolationFactor(this.interpolation,n,a,s),u=r[i].evaluate(e),p=r[i+1].evaluate(e);return"interpolate"===this.operator?Bt[this.type.kind.toLowerCase()](u,p,l):"interpolate-hcl"===this.operator?fr.reverse(fr.interpolate(fr.forward(u),fr.forward(p),l)):cr.reverse(cr.interpolate(cr.forward(u),cr.forward(p),l))}eachChild(e){e(this.input);for(const t of this.outputs)e(t)}outputDefined(){return this.outputs.every((e=>e.outputDefined()))}serialize(){let e;e="linear"===this.interpolation.name?["linear"]:"exponential"===this.interpolation.name?1===this.interpolation.base?["linear"]:["exponential",this.interpolation.base]:["cubic-bezier"].concat(this.interpolation.controlPoints);const t=[this.operator,e,this.input.serialize()];for(let e=0;e<this.labels.length;e++)t.push(this.labels[e],this.outputs[e].serialize());return t}}function mr(e,t,r,n){const o=n-r,i=e-r;return 0===o?0:1===t?i/o:(Math.pow(t,i)-1)/(Math.pow(t,o)-1)}var yr=dr;class hr{constructor(e,t){this.type=e,this.args=t}static parse(e,t){if(e.length<2)return t.error("Expectected at least one argument.");let r=null;const n=t.expectedType;n&&"value"!==n.kind&&(r=n);const o=[];for(const n of e.slice(1)){const e=t.parse(n,1+o.length,r,void 0,{typeAnnotation:"omit"});if(!e)return null;r=r||e.type,o.push(e)}const i=n&&o.some((e=>Ne(n,e.type)));return new hr(i?Ae:r,o)}evaluate(e){let t,r=null,n=0;for(const o of this.args){if(n++,r=o.evaluate(e),r&&r instanceof Ze&&!r.available&&(t||(t=r),r=null,n===this.args.length))return t;if(null!==r)break}return r}eachChild(e){this.args.forEach(e)}outputDefined(){return this.args.every((e=>e.outputDefined()))}serialize(){const e=["coalesce"];return this.eachChild((t=>{e.push(t.serialize())})),e}}var gr=hr;class vr{constructor(e,t){this.type=t.type,this.bindings=[].concat(e),this.result=t}evaluate(e){return this.result.evaluate(e)}eachChild(e){for(const t of this.bindings)e(t[1]);e(this.result)}static parse(e,t){if(e.length<4)return t.error(`Expected at least 3 arguments, but found ${e.length-1} instead.`);const r=[];for(let n=1;n<e.length-1;n+=2){const o=e[n];if("string"!=typeof o)return t.error(`Expected string, but found ${typeof o} instead.`,n);if(/[^a-zA-Z0-9_]/.test(o))return t.error("Variable names must contain only alphanumeric characters or '_'.",n);const i=t.parse(e[n+1],n+1);if(!i)return null;r.push([o,i])}const n=t.parse(e[e.length-1],e.length-1,t.expectedType,r);return n?new vr(r,n):null}outputDefined(){return this.result.outputDefined()}serialize(){const e=["let"];for(const[t,r]of this.bindings)e.push(t,r.serialize());return e.push(this.result.serialize()),e}}var br=vr;class xr{constructor(e,t,r){this.type=e,this.index=t,this.input=r}static parse(e,t){if(3!==e.length)return t.error(`Expected 2 arguments, but found ${e.length-1} instead.`);const r=t.parse(e[1],1,Ee),n=t.parse(e[2],2,Oe(t.expectedType||Ae));if(!r||!n)return null;const o=n.type;return new xr(o.itemType,r,n)}evaluate(e){const t=this.index.evaluate(e),r=this.input.evaluate(e);if(t<0)throw new et(`Array index out of bounds: ${t} < 0.`);if(t>=r.length)throw new et(`Array index out of bounds: ${t} > ${r.length-1}.`);if(t!==Math.floor(t))throw new et(`Array index must be an integer, but found ${t} instead.`);return r[t]}eachChild(e){e(this.index),e(this.input)}outputDefined(){return!1}serialize(){return["at",this.index.serialize(),this.input.serialize()]}}var wr=xr;class kr{constructor(e,t){this.type=_e,this.needle=e,this.haystack=t}static parse(e,t){if(3!==e.length)return t.error(`Expected 2 arguments, but found ${e.length-1} instead.`);const r=t.parse(e[1],1,Ae),n=t.parse(e[2],2,Ae);return r&&n?Ue(r.type,[_e,$e,Ee,Te,Ae])?new kr(r,n):t.error(`Expected first argument to be of type boolean, string, number or null, but found ${Re(r.type)} instead`):null}evaluate(e){const t=this.needle.evaluate(e),r=this.haystack.evaluate(e);if(null==r)return!1;if(!Ve(t,["boolean","string","number","null"]))throw new et(`Expected first argument to be of type boolean, string, number or null, but found ${Re(He(t))} instead.`);if(!Ve(r,["string","array"]))throw new et(`Expected second argument to be of type array or string, but found ${Re(He(r))} instead.`);return r.indexOf(t)>=0}eachChild(e){e(this.needle),e(this.haystack)}outputDefined(){return!0}serialize(){return["in",this.needle.serialize(),this.haystack.serialize()]}}var zr=kr;class Mr{constructor(e,t,r){this.type=Ee,this.needle=e,this.haystack=t,this.fromIndex=r}static parse(e,t){if(e.length<=2||e.length>=5)return t.error(`Expected 3 or 4 arguments, but found ${e.length-1} instead.`);const r=t.parse(e[1],1,Ae),n=t.parse(e[2],2,Ae);if(!r||!n)return null;if(!Ue(r.type,[_e,$e,Ee,Te,Ae]))return t.error(`Expected first argument to be of type boolean, string, number or null, but found ${Re(r.type)} instead`);if(4===e.length){const o=t.parse(e[3],3,Ee);return o?new Mr(r,n,o):null}return new Mr(r,n)}evaluate(e){const t=this.needle.evaluate(e),r=this.haystack.evaluate(e);if(!Ve(t,["boolean","string","number","null"]))throw new et(`Expected first argument to be of type boolean, string, number or null, but found ${Re(He(t))} instead.`);if(!Ve(r,["string","array"]))throw new et(`Expected second argument to be of type array or string, but found ${Re(He(r))} instead.`);if(this.fromIndex){const n=this.fromIndex.evaluate(e);return r.indexOf(t,n)}return r.indexOf(t)}eachChild(e){e(this.needle),e(this.haystack),this.fromIndex&&e(this.fromIndex)}outputDefined(){return!1}serialize(){if(null!=this.fromIndex&&void 0!==this.fromIndex){const e=this.fromIndex.serialize();return["index-of",this.needle.serialize(),this.haystack.serialize(),e]}return["index-of",this.needle.serialize(),this.haystack.serialize()]}}var Sr=Mr;class jr{constructor(e,t,r,n,o,i){this.inputType=e,this.type=t,this.input=r,this.cases=n,this.outputs=o,this.otherwise=i}static parse(e,t){if(e.length<5)return t.error(`Expected at least 4 arguments, but found only ${e.length-1}.`);if(e.length%2!=1)return t.error("Expected an even number of arguments.");let r,n;t.expectedType&&"value"!==t.expectedType.kind&&(n=t.expectedType);const o={},i=[];for(let a=2;a<e.length-1;a+=2){let s=e[a];const l=e[a+1];Array.isArray(s)||(s=[s]);const u=t.concat(a);if(0===s.length)return u.error("Expected at least one branch label.");for(const e of s){if("number"!=typeof e&&"string"!=typeof e)return u.error("Branch labels must be numbers or strings.");if("number"==typeof e&&Math.abs(e)>Number.MAX_SAFE_INTEGER)return u.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);if("number"==typeof e&&Math.floor(e)!==e)return u.error("Numeric branch labels must be integer values.");if(r){if(u.checkSubtype(r,He(e)))return null}else r=He(e);if(void 0!==o[String(e)])return u.error("Branch labels must be unique.");o[String(e)]=i.length}const p=t.parse(l,a,n);if(!p)return null;n=n||p.type,i.push(p)}const a=t.parse(e[1],1,Ae);if(!a)return null;const s=t.parse(e[e.length-1],e.length-1,n);return s?"value"!==a.type.kind&&t.concat(1).checkSubtype(r,a.type)?null:new jr(r,n,a,o,i,s):null}evaluate(e){const t=this.input.evaluate(e);return(He(t)===this.inputType&&this.outputs[this.cases[t]]||this.otherwise).evaluate(e)}eachChild(e){e(this.input),this.outputs.forEach(e),e(this.otherwise)}outputDefined(){return this.outputs.every((e=>e.outputDefined()))&&this.otherwise.outputDefined()}serialize(){const e=["match",this.input.serialize()],t=Object.keys(this.cases).sort(),r=[],n={};for(const e of t){const t=n[this.cases[e]];void 0===t?(n[this.cases[e]]=r.length,r.push([this.cases[e],[e]])):r[t][1].push(e)}const o=e=>"number"===this.inputType.kind?Number(e):e;for(const[t,n]of r)1===n.length?e.push(o(n[0])):e.push(n.map(o)),e.push(this.outputs[t].serialize());return e.push(this.otherwise.serialize()),e}}var qr=jr;class Tr{constructor(e,t,r){this.type=e,this.branches=t,this.otherwise=r}static parse(e,t){if(e.length<4)return t.error(`Expected at least 3 arguments, but found only ${e.length-1}.`);if(e.length%2!=0)return t.error("Expected an odd number of arguments.");let r;t.expectedType&&"value"!==t.expectedType.kind&&(r=t.expectedType);const n=[];for(let o=1;o<e.length-1;o+=2){const i=t.parse(e[o],o,_e);if(!i)return null;const a=t.parse(e[o+1],o+1,r);if(!a)return null;n.push([i,a]),r=r||a.type}const o=t.parse(e[e.length-1],e.length-1,r);return o?new Tr(r,n,o):null}evaluate(e){for(const[t,r]of this.branches)if(t.evaluate(e))return r.evaluate(e);return this.otherwise.evaluate(e)}eachChild(e){for(const[t,r]of this.branches)e(t),e(r);e(this.otherwise)}outputDefined(){return this.branches.every((([e,t])=>t.outputDefined()))&&this.otherwise.outputDefined()}serialize(){const e=["case"];return this.eachChild((t=>{e.push(t.serialize())})),e}}var Er=Tr;class $r{constructor(e,t,r,n){this.type=e,this.input=t,this.beginIndex=r,this.endIndex=n}static parse(e,t){if(e.length<=2||e.length>=5)return t.error(`Expected 3 or 4 arguments, but found ${e.length-1} instead.`);const r=t.parse(e[1],1,Ae),n=t.parse(e[2],2,Ee);if(!r||!n)return null;if(!Ue(r.type,[Oe(Ae),$e,Ae]))return t.error(`Expected first argument to be of type array or string, but found ${Re(r.type)} instead`);if(4===e.length){const o=t.parse(e[3],3,Ee);return o?new $r(r.type,r,n,o):null}return new $r(r.type,r,n)}evaluate(e){const t=this.input.evaluate(e),r=this.beginIndex.evaluate(e);if(!Ve(t,["string","array"]))throw new et(`Expected first argument to be of type array or string, but found ${Re(He(t))} instead.`);if(this.endIndex){const n=this.endIndex.evaluate(e);return t.slice(r,n)}return t.slice(r)}eachChild(e){e(this.input),e(this.beginIndex),this.endIndex&&e(this.endIndex)}outputDefined(){return!1}serialize(){if(null!=this.endIndex&&void 0!==this.endIndex){const e=this.endIndex.serialize();return["slice",this.input.serialize(),this.beginIndex.serialize(),e]}return["slice",this.input.serialize(),this.beginIndex.serialize()]}}var _r=$r;function Cr(e,t){return"=="===e||"!="===e?"boolean"===t.kind||"string"===t.kind||"number"===t.kind||"null"===t.kind||"value"===t.kind:"string"===t.kind||"number"===t.kind||"value"===t.kind}function Ir(e,t,r,n){return 0===n.compare(t,r)}function Ar(e,t,r){const n="=="!==e&&"!="!==e;return class o{constructor(e,t,r){this.type=_e,this.lhs=e,this.rhs=t,this.collator=r,this.hasUntypedArgument="value"===e.type.kind||"value"===t.type.kind}static parse(e,t){if(3!==e.length&&4!==e.length)return t.error("Expected two or three arguments.");const r=e[0];let i=t.parse(e[1],1,Ae);if(!i)return null;if(!Cr(r,i.type))return t.concat(1).error(`"${r}" comparisons are not supported for type '${Re(i.type)}'.`);let a=t.parse(e[2],2,Ae);if(!a)return null;if(!Cr(r,a.type))return t.concat(2).error(`"${r}" comparisons are not supported for type '${Re(a.type)}'.`);if(i.type.kind!==a.type.kind&&"value"!==i.type.kind&&"value"!==a.type.kind)return t.error(`Cannot compare types '${Re(i.type)}' and '${Re(a.type)}'.`);n&&("value"===i.type.kind&&"value"!==a.type.kind?i=new nt(a.type,[i]):"value"!==i.type.kind&&"value"===a.type.kind&&(a=new nt(i.type,[a])));let s=null;if(4===e.length){if("string"!==i.type.kind&&"string"!==a.type.kind&&"value"!==i.type.kind&&"value"!==a.type.kind)return t.error("Cannot use collator to compare non-string types.");if(s=t.parse(e[3],3,Fe),!s)return null}return new o(i,a,s)}evaluate(o){const i=this.lhs.evaluate(o),a=this.rhs.evaluate(o);if(n&&this.hasUntypedArgument){const t=He(i),r=He(a);if(t.kind!==r.kind||"string"!==t.kind&&"number"!==t.kind)throw new et(`Expected arguments for "${e}" to be (string, string) or (number, number), but found (${t.kind}, ${r.kind}) instead.`)}if(this.collator&&!n&&this.hasUntypedArgument){const e=He(i),r=He(a);if("string"!==e.kind||"string"!==r.kind)return t(o,i,a)}return this.collator?r(o,i,a,this.collator.evaluate(o)):t(o,i,a)}eachChild(e){e(this.lhs),e(this.rhs),this.collator&&e(this.collator)}outputDefined(){return!0}serialize(){const t=[e];return this.eachChild((e=>{t.push(e.serialize())})),t}}}const Fr=Ar("==",(function(e,t,r){return t===r}),Ir),Pr=Ar("!=",(function(e,t,r){return t!==r}),(function(e,t,r,n){return!Ir(0,t,r,n)})),Dr=Ar("<",(function(e,t,r){return t<r}),(function(e,t,r,n){return n.compare(t,r)<0})),Or=Ar(">",(function(e,t,r){return t>r}),(function(e,t,r,n){return n.compare(t,r)>0})),Rr=Ar("<=",(function(e,t,r){return t<=r}),(function(e,t,r,n){return n.compare(t,r)<=0})),Lr=Ar(">=",(function(e,t,r){return t>=r}),(function(e,t,r,n){return n.compare(t,r)>=0}));class Nr{constructor(e,t,r,n,o,i){this.type=$e,this.number=e,this.locale=t,this.currency=r,this.unit=n,this.minFractionDigits=o,this.maxFractionDigits=i}static parse(e,t){if(3!==e.length)return t.error("Expected two arguments.");const r=t.parse(e[1],1,Ee);if(!r)return null;const n=e[2];if("object"!=typeof n||Array.isArray(n))return t.error("NumberFormat options argument must be an object.");let o=null;if(n.locale&&(o=t.parse(n.locale,1,$e),!o))return null;let i=null;if(n.currency&&(i=t.parse(n.currency,1,$e),!i))return null;let a=null;if(n.unit&&(a=t.parse(n.unit,1,$e),!a))return null;let s=null;if(n["min-fraction-digits"]&&(s=t.parse(n["min-fraction-digits"],1,Ee),!s))return null;let l=null;return n["max-fraction-digits"]&&(l=t.parse(n["max-fraction-digits"],1,Ee),!l)?null:new Nr(r,o,i,a,s,l)}evaluate(e){return new Intl.NumberFormat(this.locale?this.locale.evaluate(e):[],{style:(this.currency?"currency":this.unit&&"unit")||"decimal",currency:this.currency?this.currency.evaluate(e):void 0,unit:this.unit?this.unit.evaluate(e):void 0,minimumFractionDigits:this.minFractionDigits?this.minFractionDigits.evaluate(e):void 0,maximumFractionDigits:this.maxFractionDigits?this.maxFractionDigits.evaluate(e):void 0}).format(this.number.evaluate(e))}eachChild(e){e(this.number),this.locale&&e(this.locale),this.currency&&e(this.currency),this.unit&&e(this.unit),this.minFractionDigits&&e(this.minFractionDigits),this.maxFractionDigits&&e(this.maxFractionDigits)}outputDefined(){return!1}serialize(){const e={};return this.locale&&(e.locale=this.locale.serialize()),this.currency&&(e.currency=this.currency.serialize()),this.unit&&(e.unit=this.unit.serialize()),this.minFractionDigits&&(e["min-fraction-digits"]=this.minFractionDigits.serialize()),this.maxFractionDigits&&(e["max-fraction-digits"]=this.maxFractionDigits.serialize()),["number-format",this.number.serialize(),e]}}class Ur{constructor(e){this.type=Ee,this.input=e}static parse(e,t){if(2!==e.length)return t.error(`Expected 1 argument, but found ${e.length-1} instead.`);const r=t.parse(e[1],1);return r?"array"!==r.type.kind&&"string"!==r.type.kind&&"value"!==r.type.kind?t.error(`Expected argument of type string or array, but found ${Re(r.type)} instead.`):new Ur(r):null}evaluate(e){const t=this.input.evaluate(e);if("string"==typeof t)return t.length;if(Array.isArray(t))return t.length;throw new et(`Expected value to be of type string or array, but found ${Re(He(t))} instead.`)}eachChild(e){e(this.input)}outputDefined(){return!1}serialize(){const e=["length"];return this.eachChild((t=>{e.push(t.serialize())})),e}}const Vr={"==":Fr,"!=":Pr,">":Or,"<":Dr,">=":Lr,"<=":Rr,array:nt,at:wr,boolean:nt,case:Er,coalesce:gr,collator:dt,format:ot,image:it,in:zr,"index-of":Sr,interpolate:yr,"interpolate-hcl":yr,"interpolate-lab":yr,length:Ur,let:br,literal:Qe,match:qr,number:nt,"number-format":Nr,object:nt,slice:_r,step:Vt,string:nt,"to-boolean":lt,"to-color":lt,"to-number":lt,"to-string":lt,var:Dt,within:Ct};function Gr(e,[t,r,n,o]){t=t.evaluate(e),r=r.evaluate(e),n=n.evaluate(e);const i=o?o.evaluate(e):1,a=Be(t,r,n,i);if(a)throw new et(a);return new me(t/255*i,r/255*i,n/255*i,i)}function Wr(e,t){return e in t}function Jr(e,t){const r=t[e];return void 0===r?null:r}function Zr(e){return{type:e}}ft.register(Vr,{error:[{kind:"error"},[$e],(e,[t])=>{throw new et(t.evaluate(e))}],typeof:[$e,[Ae],(e,[t])=>Re(He(t.evaluate(e)))],"to-rgba":[Oe(Ee,4),[Ce],(e,[t])=>t.evaluate(e).toArray()],rgb:[Ce,[Ee,Ee,Ee],Gr],rgba:[Ce,[Ee,Ee,Ee,Ee],Gr],has:{type:_e,overloads:[[[$e],(e,[t])=>Wr(t.evaluate(e),e.properties())],[[$e,Ie],(e,[t,r])=>Wr(t.evaluate(e),r.evaluate(e))]]},get:{type:Ae,overloads:[[[$e],(e,[t])=>Jr(t.evaluate(e),e.properties())],[[$e,Ie],(e,[t,r])=>Jr(t.evaluate(e),r.evaluate(e))]]},"feature-state":[Ae,[$e],(e,[t])=>Jr(t.evaluate(e),e.featureState||{})],properties:[Ie,[],e=>e.properties()],"geometry-type":[$e,[],e=>e.geometryType()],id:[Ae,[],e=>e.id()],zoom:[Ee,[],e=>e.globals.zoom],pitch:[Ee,[],e=>e.globals.pitch||0],"distance-from-center":[Ee,[],e=>e.distanceFromCenter()],"heatmap-density":[Ee,[],e=>e.globals.heatmapDensity||0],"line-progress":[Ee,[],e=>e.globals.lineProgress||0],"sky-radial-progress":[Ee,[],e=>e.globals.skyRadialProgress||0],accumulated:[Ae,[],e=>void 0===e.globals.accumulated?null:e.globals.accumulated],"+":[Ee,Zr(Ee),(e,t)=>{let r=0;for(const n of t)r+=n.evaluate(e);return r}],"*":[Ee,Zr(Ee),(e,t)=>{let r=1;for(const n of t)r*=n.evaluate(e);return r}],"-":{type:Ee,overloads:[[[Ee,Ee],(e,[t,r])=>t.evaluate(e)-r.evaluate(e)],[[Ee],(e,[t])=>-t.evaluate(e)]]},"/":[Ee,[Ee,Ee],(e,[t,r])=>t.evaluate(e)/r.evaluate(e)],"%":[Ee,[Ee,Ee],(e,[t,r])=>t.evaluate(e)%r.evaluate(e)],ln2:[Ee,[],()=>Math.LN2],pi:[Ee,[],()=>Math.PI],e:[Ee,[],()=>Math.E],"^":[Ee,[Ee,Ee],(e,[t,r])=>Math.pow(t.evaluate(e),r.evaluate(e))],sqrt:[Ee,[Ee],(e,[t])=>Math.sqrt(t.evaluate(e))],log10:[Ee,[Ee],(e,[t])=>Math.log(t.evaluate(e))/Math.LN10],ln:[Ee,[Ee],(e,[t])=>Math.log(t.evaluate(e))],log2:[Ee,[Ee],(e,[t])=>Math.log(t.evaluate(e))/Math.LN2],sin:[Ee,[Ee],(e,[t])=>Math.sin(t.evaluate(e))],cos:[Ee,[Ee],(e,[t])=>Math.cos(t.evaluate(e))],tan:[Ee,[Ee],(e,[t])=>Math.tan(t.evaluate(e))],asin:[Ee,[Ee],(e,[t])=>Math.asin(t.evaluate(e))],acos:[Ee,[Ee],(e,[t])=>Math.acos(t.evaluate(e))],atan:[Ee,[Ee],(e,[t])=>Math.atan(t.evaluate(e))],min:[Ee,Zr(Ee),(e,t)=>Math.min(...t.map((t=>t.evaluate(e))))],max:[Ee,Zr(Ee),(e,t)=>Math.max(...t.map((t=>t.evaluate(e))))],abs:[Ee,[Ee],(e,[t])=>Math.abs(t.evaluate(e))],round:[Ee,[Ee],(e,[t])=>{const r=t.evaluate(e);return r<0?-Math.round(-r):Math.round(r)}],floor:[Ee,[Ee],(e,[t])=>Math.floor(t.evaluate(e))],ceil:[Ee,[Ee],(e,[t])=>Math.ceil(t.evaluate(e))],"filter-==":[_e,[$e,Ae],(e,[t,r])=>e.properties()[t.value]===r.value],"filter-id-==":[_e,[Ae],(e,[t])=>e.id()===t.value],"filter-type-==":[_e,[$e],(e,[t])=>e.geometryType()===t.value],"filter-<":[_e,[$e,Ae],(e,[t,r])=>{const n=e.properties()[t.value],o=r.value;return typeof n==typeof o&&n<o}],"filter-id-<":[_e,[Ae],(e,[t])=>{const r=e.id(),n=t.value;return typeof r==typeof n&&r<n}],"filter->":[_e,[$e,Ae],(e,[t,r])=>{const n=e.properties()[t.value],o=r.value;return typeof n==typeof o&&n>o}],"filter-id->":[_e,[Ae],(e,[t])=>{const r=e.id(),n=t.value;return typeof r==typeof n&&r>n}],"filter-<=":[_e,[$e,Ae],(e,[t,r])=>{const n=e.properties()[t.value],o=r.value;return typeof n==typeof o&&n<=o}],"filter-id-<=":[_e,[Ae],(e,[t])=>{const r=e.id(),n=t.value;return typeof r==typeof n&&r<=n}],"filter->=":[_e,[$e,Ae],(e,[t,r])=>{const n=e.properties()[t.value],o=r.value;return typeof n==typeof o&&n>=o}],"filter-id->=":[_e,[Ae],(e,[t])=>{const r=e.id(),n=t.value;return typeof r==typeof n&&r>=n}],"filter-has":[_e,[Ae],(e,[t])=>t.value in e.properties()],"filter-has-id":[_e,[],e=>null!==e.id()&&void 0!==e.id()],"filter-type-in":[_e,[Oe($e)],(e,[t])=>t.value.indexOf(e.geometryType())>=0],"filter-id-in":[_e,[Oe(Ae)],(e,[t])=>t.value.indexOf(e.id())>=0],"filter-in-small":[_e,[$e,Oe(Ae)],(e,[t,r])=>r.value.indexOf(e.properties()[t.value])>=0],"filter-in-large":[_e,[$e,Oe(Ae)],(e,[t,r])=>function(e,t,r,n){for(;r<=n;){const o=r+n>>1;if(t[o]===e)return!0;t[o]>e?n=o-1:r=o+1}return!1}(e.properties()[t.value],r.value,0,r.value.length-1)],all:{type:_e,overloads:[[[_e,_e],(e,[t,r])=>t.evaluate(e)&&r.evaluate(e)],[Zr(_e),(e,t)=>{for(const r of t)if(!r.evaluate(e))return!1;return!0}]]},any:{type:_e,overloads:[[[_e,_e],(e,[t,r])=>t.evaluate(e)||r.evaluate(e)],[Zr(_e),(e,t)=>{for(const r of t)if(r.evaluate(e))return!0;return!1}]]},"!":[_e,[_e],(e,[t])=>!t.evaluate(e)],"is-supported-script":[_e,[$e],(e,[t])=>{const r=e.globals&&e.globals.isSupportedScript;return!r||r(t.evaluate(e))}],upcase:[$e,[$e],(e,[t])=>t.evaluate(e).toUpperCase()],downcase:[$e,[$e],(e,[t])=>t.evaluate(e).toLowerCase()],concat:[$e,Zr(Ae),(e,t)=>t.map((t=>Ye(t.evaluate(e)))).join("")],"resolved-locale":[$e,[Fe],(e,[t])=>t.evaluate(e).resolvedLocale()]});var Br=Vr;function Xr(e){return{result:"success",value:e}}function Hr(e){return{result:"error",value:e}}function Yr(e){return"object"==typeof e&&null!==e&&!Array.isArray(e)}class Kr{constructor(e,t){this.expression=e,this._warningHistory={},this._evaluator=new pt,this._defaultValue=t?function(e){return"color"===e.type&&(Yr(e.default)||Array.isArray(e.default))?new me(0,0,0,0):"color"===e.type?me.parse(e.default)||null:void 0===e.default?null:e.default}(t):null,this._enumValues=t&&"enum"===t.type?t.values:null}evaluateWithoutErrorHandling(e,t,r,n,o,i,a,s){return this._evaluator.globals=e,this._evaluator.feature=t,this._evaluator.featureState=r,this._evaluator.canonical=n||null,this._evaluator.availableImages=o||null,this._evaluator.formattedSection=i,this._evaluator.featureTileCoord=a||null,this._evaluator.featureDistanceData=s||null,this.expression.evaluate(this._evaluator)}evaluate(e,t,r,n,o,i,a,s){this._evaluator.globals=e,this._evaluator.feature=t||null,this._evaluator.featureState=r||null,this._evaluator.canonical=n||null,this._evaluator.availableImages=o||null,this._evaluator.formattedSection=i||null,this._evaluator.featureTileCoord=a||null,this._evaluator.featureDistanceData=s||null;try{const e=this.expression.evaluate(this._evaluator);if(null==e||"number"==typeof e&&e!=e)return this._defaultValue;if(this._enumValues&&!(e in this._enumValues))throw new et(`Expected value to be one of ${Object.keys(this._enumValues).map((e=>JSON.stringify(e))).join(", ")}, but found ${JSON.stringify(e)} instead.`);return e}catch(e){return this._warningHistory[e.message]||(this._warningHistory[e.message]=!0,"undefined"!=typeof console&&console.warn(e.message)),this._defaultValue}}}function Qr(e,t){const r=new Rt(Br,[],t?function(e){const t={color:Ce,string:$e,number:Ee,enum:$e,boolean:_e,formatted:Pe,resolvedImage:De};if("array"===e.type)return Oe(t[e.value]||Ae,e.length);return t[e.type]}(t):void 0),n=r.parse(e,void 0,void 0,void 0,t&&"string"===t.type?{typeAnnotation:"coerce"}:void 0);return n?Xr(new Kr(n,t)):Hr(r.errors)}class en{constructor(e,t){this.kind=e,this._styleExpression=t,this.isStateDependent="constant"!==e&&!At(t.expression)}evaluateWithoutErrorHandling(e,t,r,n,o,i){return this._styleExpression.evaluateWithoutErrorHandling(e,t,r,n,o,i)}evaluate(e,t,r,n,o,i){return this._styleExpression.evaluate(e,t,r,n,o,i)}}class tn{constructor(e,t,r,n){this.kind=e,this.zoomStops=r,this._styleExpression=t,this.isStateDependent="camera"!==e&&!At(t.expression),this.interpolationType=n}evaluateWithoutErrorHandling(e,t,r,n,o,i){return this._styleExpression.evaluateWithoutErrorHandling(e,t,r,n,o,i)}evaluate(e,t,r,n,o,i){return this._styleExpression.evaluate(e,t,r,n,o,i)}interpolationFactor(e,t,r){return this.interpolationType?yr.interpolationFactor(this.interpolationType,e,t,r):0}}function rn(e,t){if("error"===(e=Qr(e,t)).result)return e;const r=e.value.expression,n=It(r);if(!n&&!function(e){return"data-driven"===e["property-type"]}(t))return Hr([new Se("","data expressions not supported")]);const o=Ft(r,["zoom","pitch","distance-from-center"]);if(!o&&!function(e){return!!e.expression&&e.expression.parameters.indexOf("zoom")>-1}(t))return Hr([new Se("","zoom expressions not supported")]);const i=nn(r);if(!i&&!o)return Hr([new Se("",'"zoom" expression may only be used as input to a top-level "step" or "interpolate" expression.')]);if(i instanceof Se)return Hr([i]);if(i instanceof yr&&!function(e){return!!e.expression&&e.expression.interpolated}(t))return Hr([new Se("",'"interpolate" expressions cannot be used with this property')]);if(!i)return Xr(new en(n?"constant":"source",e.value));const a=i instanceof yr?i.interpolation:void 0;return Xr(new tn(n?"camera":"composite",e.value,i.labels,a))}function nn(e){let t=null;if(e instanceof br)t=nn(e.result);else if(e instanceof gr){for(const r of e.args)if(t=nn(r),t)break}else(e instanceof Vt||e instanceof yr)&&e.input instanceof ft&&"zoom"===e.input.name&&(t=e);return t instanceof Se||e.eachChild((e=>{const r=nn(e);r instanceof Se?t=r:!t&&r?t=new Se("",'"zoom" expression may only be used as input to a top-level "step" or "interpolate" expression.'):t&&r&&t!==r&&(t=new Se("",'Only one zoom-based "step" or "interpolate" subexpression may be used in an expression.'))})),t}function on(e){if(Array.isArray(e))return e.map(on);if(e instanceof Object&&!(e instanceof Number||e instanceof String||e instanceof Boolean)){const t={};for(const r in e)t[r]=on(e[r]);return t}return function(e){return e instanceof Number||e instanceof String||e instanceof Boolean?e.valueOf():e}(e)}var an={$version:8,$root:{version:{required:!0,type:"enum",values:[8]},name:{type:"string"},metadata:{type:"*"},center:{type:"array",value:"number"},zoom:{type:"number"},bearing:{type:"number",default:0,period:360,units:"degrees"},pitch:{type:"number",default:0,units:"degrees"},light:{type:"light"},terrain:{type:"terrain"},fog:{type:"fog"},sources:{required:!0,type:"sources"},sprite:{type:"string"},glyphs:{type:"string"},transition:{type:"transition"},projection:{type:"projection"},layers:{required:!0,type:"array",value:"layer"}},sources:{"*":{type:"source"}},source:["source_vector","source_raster","source_raster_dem","source_geojson","source_video","source_image"],source_vector:{type:{required:!0,type:"enum",values:{vector:{}}},url:{type:"string"},tiles:{type:"array",value:"string"},bounds:{type:"array",value:"number",length:4,default:[-180,-85.051129,180,85.051129]},scheme:{type:"enum",values:{xyz:{},tms:{}},default:"xyz"},minzoom:{type:"number",default:0},maxzoom:{type:"number",default:22},attribution:{type:"string"},promoteId:{type:"promoteId"},volatile:{type:"boolean",default:!1},"*":{type:"*"}},source_raster:{type:{required:!0,type:"enum",values:{raster:{}}},url:{type:"string"},tiles:{type:"array",value:"string"},bounds:{type:"array",value:"number",length:4,default:[-180,-85.051129,180,85.051129]},minzoom:{type:"number",default:0},maxzoom:{type:"number",default:22},tileSize:{type:"number",default:512,units:"pixels"},scheme:{type:"enum",values:{xyz:{},tms:{}},default:"xyz"},attribution:{type:"string"},volatile:{type:"boolean",default:!1},"*":{type:"*"}},source_raster_dem:{type:{required:!0,type:"enum",values:{"raster-dem":{}}},url:{type:"string"},tiles:{type:"array",value:"string"},bounds:{type:"array",value:"number",length:4,default:[-180,-85.051129,180,85.051129]},minzoom:{type:"number",default:0},maxzoom:{type:"number",default:22},tileSize:{type:"number",default:512,units:"pixels"},attribution:{type:"string"},encoding:{type:"enum",values:{terrarium:{},mapbox:{}},default:"mapbox"},volatile:{type:"boolean",default:!1},"*":{type:"*"}},source_geojson:{type:{required:!0,type:"enum",values:{geojson:{}}},data:{type:"*"},maxzoom:{type:"number",default:18},attribution:{type:"string"},buffer:{type:"number",default:128,maximum:512,minimum:0},filter:{type:"*"},tolerance:{type:"number",default:.375},cluster:{type:"boolean",default:!1},clusterRadius:{type:"number",default:50,minimum:0},clusterMaxZoom:{type:"number"},clusterMinPoints:{type:"number"},clusterProperties:{type:"*"},lineMetrics:{type:"boolean",default:!1},generateId:{type:"boolean",default:!1},promoteId:{type:"promoteId"}},source_video:{type:{required:!0,type:"enum",values:{video:{}}},urls:{required:!0,type:"array",value:"string"},coordinates:{required:!0,type:"array",length:4,value:{type:"array",length:2,value:"number"}}},source_image:{type:{required:!0,type:"enum",values:{image:{}}},url:{required:!0,type:"string"},coordinates:{required:!0,type:"array",length:4,value:{type:"array",length:2,value:"number"}}},layer:{id:{type:"string",required:!0},type:{type:"enum",values:{fill:{},line:{},symbol:{},circle:{},heatmap:{},"fill-extrusion":{},raster:{},hillshade:{},background:{},sky:{}},required:!0},metadata:{type:"*"},source:{type:"string"},"source-layer":{type:"string"},minzoom:{type:"number",minimum:0,maximum:24},maxzoom:{type:"number",minimum:0,maximum:24},filter:{type:"filter"},layout:{type:"layout"},paint:{type:"paint"}},layout:["layout_fill","layout_line","layout_circle","layout_heatmap","layout_fill-extrusion","layout_symbol","layout_raster","layout_hillshade","layout_background","layout_sky"],layout_background:{visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"}},layout_sky:{visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"}},layout_fill:{"fill-sort-key":{type:"number",expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"}},layout_circle:{"circle-sort-key":{type:"number",expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"}},layout_heatmap:{visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"}},"layout_fill-extrusion":{visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"},"fill-extrusion-edge-radius":{type:"number",private:!0,default:0,minimum:0,maximum:1,"property-type":"constant"}},layout_line:{"line-cap":{type:"enum",values:{butt:{},round:{},square:{}},default:"butt",expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"line-join":{type:"enum",values:{bevel:{},round:{},miter:{}},default:"miter",expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"line-miter-limit":{type:"number",default:2,requires:[{"line-join":"miter"}],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"line-round-limit":{type:"number",default:1.05,requires:[{"line-join":"round"}],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"line-sort-key":{type:"number",expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"}},layout_symbol:{"symbol-placement":{type:"enum",values:{point:{},line:{},"line-center":{}},default:"point",expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"symbol-spacing":{type:"number",default:250,minimum:1,units:"pixels",requires:[{"symbol-placement":"line"}],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"symbol-avoid-edges":{type:"boolean",default:!1,expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"symbol-sort-key":{type:"number",expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"symbol-z-order":{type:"enum",values:{auto:{},"viewport-y":{},source:{}},default:"auto",expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"icon-allow-overlap":{type:"boolean",default:!1,requires:["icon-image"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"icon-ignore-placement":{type:"boolean",default:!1,requires:["icon-image"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"icon-optional":{type:"boolean",default:!1,requires:["icon-image","text-field"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"icon-rotation-alignment":{type:"enum",values:{map:{},viewport:{},auto:{}},default:"auto",requires:["icon-image"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"icon-size":{type:"number",default:1,minimum:0,units:"factor of the original icon size",requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom","feature"]},"property-type":"data-driven"},"icon-text-fit":{type:"enum",values:{none:{},width:{},height:{},both:{}},default:"none",requires:["icon-image","text-field"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"icon-text-fit-padding":{type:"array",value:"number",length:4,default:[0,0,0,0],units:"pixels",requires:["icon-image","text-field",{"icon-text-fit":["both","width","height"]}],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"icon-image":{type:"resolvedImage",tokens:!0,expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"icon-rotate":{type:"number",default:0,period:360,units:"degrees",requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom","feature"]},"property-type":"data-driven"},"icon-padding":{type:"number",default:2,minimum:0,units:"pixels",requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"icon-keep-upright":{type:"boolean",default:!1,requires:["icon-image",{"icon-rotation-alignment":"map"},{"symbol-placement":["line","line-center"]}],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"icon-offset":{type:"array",value:"number",length:2,default:[0,0],requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom","feature"]},"property-type":"data-driven"},"icon-anchor":{type:"enum",values:{center:{},left:{},right:{},top:{},bottom:{},"top-left":{},"top-right":{},"bottom-left":{},"bottom-right":{}},default:"center",requires:["icon-image"],expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"icon-pitch-alignment":{type:"enum",values:{map:{},viewport:{},auto:{}},default:"auto",requires:["icon-image"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"text-pitch-alignment":{type:"enum",values:{map:{},viewport:{},auto:{}},default:"auto",requires:["text-field"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"text-rotation-alignment":{type:"enum",values:{map:{},viewport:{},auto:{}},default:"auto",requires:["text-field"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"text-field":{type:"formatted",default:"",tokens:!0,expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-font":{type:"array",value:"string",default:["Open Sans Regular","Arial Unicode MS Regular"],requires:["text-field"],expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-size":{type:"number",default:16,minimum:0,units:"pixels",requires:["text-field"],expression:{interpolated:!0,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-max-width":{type:"number",default:10,minimum:0,units:"ems",requires:["text-field",{"symbol-placement":["point"]}],expression:{interpolated:!0,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-line-height":{type:"number",default:1.2,units:"ems",requires:["text-field"],expression:{interpolated:!0,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-letter-spacing":{type:"number",default:0,units:"ems",requires:["text-field"],expression:{interpolated:!0,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-justify":{type:"enum",values:{auto:{},left:{},center:{},right:{}},default:"center",requires:["text-field"],expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-radial-offset":{type:"number",units:"ems",default:0,requires:["text-field"],"property-type":"data-driven",expression:{interpolated:!0,parameters:["zoom","feature"]}},"text-variable-anchor":{type:"array",value:"enum",values:{center:{},left:{},right:{},top:{},bottom:{},"top-left":{},"top-right":{},"bottom-left":{},"bottom-right":{}},requires:["text-field",{"symbol-placement":["point"]}],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"text-anchor":{type:"enum",values:{center:{},left:{},right:{},top:{},bottom:{},"top-left":{},"top-right":{},"bottom-left":{},"bottom-right":{}},default:"center",requires:["text-field",{"!":"text-variable-anchor"}],expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-max-angle":{type:"number",default:45,units:"degrees",requires:["text-field",{"symbol-placement":["line","line-center"]}],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"text-writing-mode":{type:"array",value:"enum",values:{horizontal:{},vertical:{}},requires:["text-field"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"text-rotate":{type:"number",default:0,period:360,units:"degrees",requires:["text-field"],expression:{interpolated:!0,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-padding":{type:"number",default:2,minimum:0,units:"pixels",requires:["text-field"],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"text-keep-upright":{type:"boolean",default:!0,requires:["text-field",{"text-rotation-alignment":"map"},{"symbol-placement":["line","line-center"]}],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"text-transform":{type:"enum",values:{none:{},uppercase:{},lowercase:{}},default:"none",requires:["text-field"],expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-offset":{type:"array",value:"number",units:"ems",length:2,default:[0,0],requires:["text-field",{"!":"text-radial-offset"}],expression:{interpolated:!0,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-allow-overlap":{type:"boolean",default:!1,requires:["text-field"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"text-ignore-placement":{type:"boolean",default:!1,requires:["text-field"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"text-optional":{type:"boolean",default:!1,requires:["text-field","icon-image"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"}},layout_raster:{visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"}},layout_hillshade:{visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"}},filter:{type:"array",value:"*"},filter_symbol:{type:"boolean",default:!1,transition:!1,"property-type":"data-driven",expression:{interpolated:!1,parameters:["zoom","feature","pitch","distance-from-center"]}},filter_fill:{type:"boolean",default:!1,transition:!1,"property-type":"data-driven",expression:{interpolated:!1,parameters:["zoom","feature"]}},filter_line:{type:"boolean",default:!1,transition:!1,"property-type":"data-driven",expression:{interpolated:!1,parameters:["zoom","feature"]}},filter_circle:{type:"boolean",default:!1,transition:!1,"property-type":"data-driven",expression:{interpolated:!1,parameters:["zoom","feature"]}},"filter_fill-extrusion":{type:"boolean",default:!1,transition:!1,"property-type":"data-driven",expression:{interpolated:!1,parameters:["zoom","feature"]}},filter_heatmap:{type:"boolean",default:!1,transition:!1,"property-type":"data-driven",expression:{interpolated:!1,parameters:["zoom","feature"]}},filter_operator:{type:"enum",values:{"==":{},"!=":{},">":{},">=":{},"<":{},"<=":{},in:{},"!in":{},all:{},any:{},none:{},has:{},"!has":{},within:{}}},geometry_type:{type:"enum",values:{Point:{},LineString:{},Polygon:{}}},function:{expression:{type:"expression"},stops:{type:"array",value:"function_stop"},base:{type:"number",default:1,minimum:0},property:{type:"string",default:"$zoom"},type:{type:"enum",values:{identity:{},exponential:{},interval:{},categorical:{}},default:"exponential"},colorSpace:{type:"enum",values:{rgb:{},lab:{},hcl:{}},default:"rgb"},default:{type:"*",required:!1}},function_stop:{type:"array",minimum:0,maximum:24,value:["number","color"],length:2},expression:{type:"array",value:"*",minimum:1},expression_name:{type:"enum",values:{let:{group:"Variable binding"},var:{group:"Variable binding"},literal:{group:"Types"},array:{group:"Types"},at:{group:"Lookup"},in:{group:"Lookup"},"index-of":{group:"Lookup"},slice:{group:"Lookup"},case:{group:"Decision"},match:{group:"Decision"},coalesce:{group:"Decision"},step:{group:"Ramps, scales, curves"},interpolate:{group:"Ramps, scales, curves"},"interpolate-hcl":{group:"Ramps, scales, curves"},"interpolate-lab":{group:"Ramps, scales, curves"},ln2:{group:"Math"},pi:{group:"Math"},e:{group:"Math"},typeof:{group:"Types"},string:{group:"Types"},number:{group:"Types"},boolean:{group:"Types"},object:{group:"Types"},collator:{group:"Types"},format:{group:"Types"},image:{group:"Types"},"number-format":{group:"Types"},"to-string":{group:"Types"},"to-number":{group:"Types"},"to-boolean":{group:"Types"},"to-rgba":{group:"Color"},"to-color":{group:"Types"},rgb:{group:"Color"},rgba:{group:"Color"},get:{group:"Lookup"},has:{group:"Lookup"},length:{group:"Lookup"},properties:{group:"Feature data"},"feature-state":{group:"Feature data"},"geometry-type":{group:"Feature data"},id:{group:"Feature data"},zoom:{group:"Camera"},pitch:{group:"Camera"},"distance-from-center":{group:"Camera"},"heatmap-density":{group:"Heatmap"},"line-progress":{group:"Feature data"},"sky-radial-progress":{group:"sky"},accumulated:{group:"Feature data"},"+":{group:"Math"},"*":{group:"Math"},"-":{group:"Math"},"/":{group:"Math"},"%":{group:"Math"},"^":{group:"Math"},sqrt:{group:"Math"},log10:{group:"Math"},ln:{group:"Math"},log2:{group:"Math"},sin:{group:"Math"},cos:{group:"Math"},tan:{group:"Math"},asin:{group:"Math"},acos:{group:"Math"},atan:{group:"Math"},min:{group:"Math"},max:{group:"Math"},round:{group:"Math"},abs:{group:"Math"},ceil:{group:"Math"},floor:{group:"Math"},distance:{group:"Math"},"==":{group:"Decision"},"!=":{group:"Decision"},">":{group:"Decision"},"<":{group:"Decision"},">=":{group:"Decision"},"<=":{group:"Decision"},all:{group:"Decision"},any:{group:"Decision"},"!":{group:"Decision"},within:{group:"Decision"},"is-supported-script":{group:"String"},upcase:{group:"String"},downcase:{group:"String"},concat:{group:"String"},"resolved-locale":{group:"String"}}},fog:{range:{type:"array",default:[.5,10],minimum:-20,maximum:20,length:2,value:"number","property-type":"data-constant",transition:!0,expression:{interpolated:!0,parameters:["zoom"]}},color:{type:"color","property-type":"data-constant",default:"#ffffff",expression:{interpolated:!0,parameters:["zoom"]},transition:!0},"high-color":{type:"color","property-type":"data-constant",default:"#245cdf",expression:{interpolated:!0,parameters:["zoom"]},transition:!0},"space-color":{type:"color","property-type":"data-constant",default:["interpolate",["linear"],["zoom"],4,"#010b19",7,"#367ab9"],expression:{interpolated:!0,parameters:["zoom"]},transition:!0},"horizon-blend":{type:"number","property-type":"data-constant",default:["interpolate",["linear"],["zoom"],4,.2,7,.1],minimum:0,maximum:1,expression:{interpolated:!0,parameters:["zoom"]},transition:!0},"star-intensity":{type:"number","property-type":"data-constant",default:["interpolate",["linear"],["zoom"],5,.35,6,0],minimum:0,maximum:1,expression:{interpolated:!0,parameters:["zoom"]},transition:!0}},light:{anchor:{type:"enum",default:"viewport",values:{map:{},viewport:{}},"property-type":"data-constant",transition:!1,expression:{interpolated:!1,parameters:["zoom"]}},position:{type:"array",default:[1.15,210,30],length:3,value:"number","property-type":"data-constant",transition:!0,expression:{interpolated:!0,parameters:["zoom"]}},color:{type:"color","property-type":"data-constant",default:"#ffffff",expression:{interpolated:!0,parameters:["zoom"]},transition:!0},intensity:{type:"number","property-type":"data-constant",default:.5,minimum:0,maximum:1,expression:{interpolated:!0,parameters:["zoom"]},transition:!0}},projection:{name:{type:"enum",values:{albers:{},equalEarth:{},equirectangular:{},lambertConformalConic:{},mercator:{},naturalEarth:{},winkelTripel:{},globe:{}},default:"mercator",required:!0},center:{type:"array",length:2,value:"number","property-type":"data-constant",minimum:[-180,-90],maximum:[180,90],transition:!1,requires:[{name:["albers","lambertConformalConic"]}]},parallels:{type:"array",length:2,value:"number","property-type":"data-constant",minimum:[-90,-90],maximum:[90,90],transition:!1,requires:[{name:["albers","lambertConformalConic"]}]}},terrain:{source:{type:"string",required:!0},exaggeration:{type:"number","property-type":"data-constant",default:1,minimum:0,maximum:1e3,expression:{interpolated:!0,parameters:["zoom"]},transition:!0,requires:["source"]}},paint:["paint_fill","paint_line","paint_circle","paint_heatmap","paint_fill-extrusion","paint_symbol","paint_raster","paint_hillshade","paint_background","paint_sky"],paint_fill:{"fill-antialias":{type:"boolean",default:!0,expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"fill-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"fill-color":{type:"color",default:"#000000",transition:!0,requires:[{"!":"fill-pattern"}],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"fill-outline-color":{type:"color",transition:!0,requires:[{"!":"fill-pattern"},{"fill-antialias":!0}],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"fill-translate":{type:"array",value:"number",length:2,default:[0,0],transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"fill-translate-anchor":{type:"enum",values:{map:{},viewport:{}},default:"map",requires:["fill-translate"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"fill-pattern":{type:"resolvedImage",transition:!1,expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"}},"paint_fill-extrusion":{"fill-extrusion-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"fill-extrusion-color":{type:"color",default:"#000000",transition:!0,requires:[{"!":"fill-extrusion-pattern"}],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"fill-extrusion-translate":{type:"array",value:"number",length:2,default:[0,0],transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"fill-extrusion-translate-anchor":{type:"enum",values:{map:{},viewport:{}},default:"map",requires:["fill-extrusion-translate"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"fill-extrusion-pattern":{type:"resolvedImage",transition:!1,expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"fill-extrusion-height":{type:"number",default:0,minimum:0,units:"meters",transition:!0,expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"fill-extrusion-base":{type:"number",default:0,minimum:0,units:"meters",transition:!0,requires:["fill-extrusion-height"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"fill-extrusion-vertical-gradient":{type:"boolean",default:!0,transition:!1,expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"fill-extrusion-ambient-occlusion-intensity":{"property-type":"data-constant",type:"number",private:!0,default:0,minimum:0,maximum:1,expression:{interpolated:!0,parameters:["zoom"]},transition:!0},"fill-extrusion-ambient-occlusion-radius":{"property-type":"data-constant",type:"number",private:!0,default:3,minimum:0,expression:{interpolated:!0,parameters:["zoom"]},transition:!0,requires:["fill-extrusion-edge-radius"]}},paint_line:{"line-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"line-color":{type:"color",default:"#000000",transition:!0,requires:[{"!":"line-pattern"}],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"line-translate":{type:"array",value:"number",length:2,default:[0,0],transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"line-translate-anchor":{type:"enum",values:{map:{},viewport:{}},default:"map",requires:["line-translate"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"line-width":{type:"number",default:1,minimum:0,transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"line-gap-width":{type:"number",default:0,minimum:0,transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"line-offset":{type:"number",default:0,transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"line-blur":{type:"number",default:0,minimum:0,transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"line-dasharray":{type:"array",value:"number",minimum:0,transition:!1,units:"line widths",requires:[{"!":"line-pattern"}],expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"line-pattern":{type:"resolvedImage",transition:!1,expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"line-gradient":{type:"color",transition:!1,requires:[{"!":"line-pattern"},{source:"geojson",has:{lineMetrics:!0}}],expression:{interpolated:!0,parameters:["line-progress"]},"property-type":"color-ramp"},"line-trim-offset":{type:"array",value:"number",length:2,default:[0,0],minimum:[0,0],maximum:[1,1],transition:!1,requires:[{source:"geojson",has:{lineMetrics:!0}}],"property-type":"constant"}},paint_circle:{"circle-radius":{type:"number",default:5,minimum:0,transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"circle-color":{type:"color",default:"#000000",transition:!0,expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"circle-blur":{type:"number",default:0,transition:!0,expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"circle-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"circle-translate":{type:"array",value:"number",length:2,default:[0,0],transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"circle-translate-anchor":{type:"enum",values:{map:{},viewport:{}},default:"map",requires:["circle-translate"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"circle-pitch-scale":{type:"enum",values:{map:{},viewport:{}},default:"map",expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"circle-pitch-alignment":{type:"enum",values:{map:{},viewport:{}},default:"viewport",expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"circle-stroke-width":{type:"number",default:0,minimum:0,transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"circle-stroke-color":{type:"color",default:"#000000",transition:!0,expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"circle-stroke-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"}},paint_heatmap:{"heatmap-radius":{type:"number",default:30,minimum:1,transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"heatmap-weight":{type:"number",default:1,minimum:0,transition:!1,expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"heatmap-intensity":{type:"number",default:1,minimum:0,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"heatmap-color":{type:"color",default:["interpolate",["linear"],["heatmap-density"],0,"rgba(0, 0, 255, 0)",.1,"royalblue",.3,"cyan",.5,"lime",.7,"yellow",1,"red"],transition:!1,expression:{interpolated:!0,parameters:["heatmap-density"]},"property-type":"color-ramp"},"heatmap-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"}},paint_symbol:{"icon-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"icon-color":{type:"color",default:"#000000",transition:!0,requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"icon-halo-color":{type:"color",default:"rgba(0, 0, 0, 0)",transition:!0,requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"icon-halo-width":{type:"number",default:0,minimum:0,transition:!0,units:"pixels",requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"icon-halo-blur":{type:"number",default:0,minimum:0,transition:!0,units:"pixels",requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"icon-translate":{type:"array",value:"number",length:2,default:[0,0],transition:!0,units:"pixels",requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"icon-translate-anchor":{type:"enum",values:{map:{},viewport:{}},default:"map",requires:["icon-image","icon-translate"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"text-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,requires:["text-field"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"text-color":{type:"color",default:"#000000",transition:!0,overridable:!0,requires:["text-field"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"text-halo-color":{type:"color",default:"rgba(0, 0, 0, 0)",transition:!0,requires:["text-field"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"text-halo-width":{type:"number",default:0,minimum:0,transition:!0,units:"pixels",requires:["text-field"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"text-halo-blur":{type:"number",default:0,minimum:0,transition:!0,units:"pixels",requires:["text-field"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"text-translate":{type:"array",value:"number",length:2,default:[0,0],transition:!0,units:"pixels",requires:["text-field"],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"text-translate-anchor":{type:"enum",values:{map:{},viewport:{}},default:"map",requires:["text-field","text-translate"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"}},paint_raster:{"raster-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"raster-hue-rotate":{type:"number",default:0,period:360,transition:!0,units:"degrees",expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"raster-brightness-min":{type:"number",default:0,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"raster-brightness-max":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"raster-saturation":{type:"number",default:0,minimum:-1,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"raster-contrast":{type:"number",default:0,minimum:-1,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"raster-resampling":{type:"enum",values:{linear:{},nearest:{}},default:"linear",expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"raster-fade-duration":{type:"number",default:300,minimum:0,transition:!1,units:"milliseconds",expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"}},paint_hillshade:{"hillshade-illumination-direction":{type:"number",default:335,minimum:0,maximum:359,transition:!1,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"hillshade-illumination-anchor":{type:"enum",values:{map:{},viewport:{}},default:"viewport",expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"hillshade-exaggeration":{type:"number",default:.5,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"hillshade-shadow-color":{type:"color",default:"#000000",transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"hillshade-highlight-color":{type:"color",default:"#FFFFFF",transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"hillshade-accent-color":{type:"color",default:"#000000",transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"}},paint_background:{"background-color":{type:"color",default:"#000000",transition:!0,requires:[{"!":"background-pattern"}],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"background-pattern":{type:"resolvedImage",transition:!1,expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"background-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"}},paint_sky:{"sky-type":{type:"enum",values:{gradient:{},atmosphere:{}},default:"atmosphere",expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"sky-atmosphere-sun":{type:"array",value:"number",length:2,units:"degrees",minimum:[0,0],maximum:[360,180],transition:!1,requires:[{"sky-type":"atmosphere"}],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"sky-atmosphere-sun-intensity":{type:"number",requires:[{"sky-type":"atmosphere"}],default:10,minimum:0,maximum:100,transition:!1,"property-type":"data-constant"},"sky-gradient-center":{type:"array",requires:[{"sky-type":"gradient"}],value:"number",default:[0,0],length:2,units:"degrees",minimum:[0,0],maximum:[360,180],transition:!1,expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"sky-gradient-radius":{type:"number",requires:[{"sky-type":"gradient"}],default:90,minimum:0,maximum:180,transition:!1,expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"sky-gradient":{type:"color",default:["interpolate",["linear"],["sky-radial-progress"],.8,"#87ceeb",1,"white"],transition:!1,requires:[{"sky-type":"gradient"}],expression:{interpolated:!0,parameters:["sky-radial-progress"]},"property-type":"color-ramp"},"sky-atmosphere-halo-color":{type:"color",default:"white",transition:!1,requires:[{"sky-type":"atmosphere"}],"property-type":"data-constant"},"sky-atmosphere-color":{type:"color",default:"white",transition:!1,requires:[{"sky-type":"atmosphere"}],"property-type":"data-constant"},"sky-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"}},transition:{duration:{type:"number",default:300,minimum:0,units:"milliseconds"},delay:{type:"number",default:0,minimum:0,units:"milliseconds"}},"property-type":{"data-driven":{type:"property-type"},"color-ramp":{type:"property-type"},"data-constant":{type:"property-type"},constant:{type:"property-type"}},promoteId:{"*":{type:"string"}}};function sn(e){if(!0===e||!1===e)return!0;if(!Array.isArray(e)||0===e.length)return!1;switch(e[0]){case"has":return e.length>=2&&"$id"!==e[1]&&"$type"!==e[1];case"in":return e.length>=3&&("string"!=typeof e[1]||Array.isArray(e[2]));case"!in":case"!has":case"none":return!1;case"==":case"!=":case">":case">=":case"<":case"<=":return 3!==e.length||Array.isArray(e[1])||Array.isArray(e[2]);case"any":case"all":for(const t of e.slice(1))if(!sn(t)&&"boolean"!=typeof t)return!1;return!0;default:return!0}}function ln(e,t="fill"){if(null==e)return{filter:()=>!0,needGeometry:!1,needFeature:!1};sn(e)||(e=yn(e));const r=e;let n=!0;try{n=function(e){if(!cn(e))return e;let t=on(e);return pn(t),t=un(t),t}(r)}catch(e){console.warn(`Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.\nThis is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md\nand paste the contents of this message in the report.\nThank you!\nFilter Expression:\n${JSON.stringify(r,null,2)}\n        `)}const o=an[`filter_${t}`],i=Qr(n,o);let a=null;if("error"===i.result)throw new Error(i.value.map((e=>`${e.key}: ${e.message}`)).join(", "));a=(e,t,r)=>i.value.evaluate(e,t,{},r);let s=null,l=null;if(n!==r){const e=Qr(r,o);if("error"===e.result)throw new Error(e.value.map((e=>`${e.key}: ${e.message}`)).join(", "));s=(t,r,n,o,i)=>e.value.evaluate(t,r,{},n,void 0,void 0,o,i),l=!It(e.value.expression)}return{filter:a,dynamicFilter:s||void 0,needGeometry:mn(n),needFeature:!!l}}function un(e){if(!Array.isArray(e))return e;const t=function(e){if(fn.has(e[0]))for(let t=1;t<e.length;t++){if(cn(e[t]))return!0}return e}(e);return!0===t?t:t.map((e=>un(e)))}function pn(e){let t=!1;const r=[];if("case"===e[0]){for(let n=1;n<e.length-1;n+=2)t=t||cn(e[n]),r.push(e[n+1]);r.push(e[e.length-1])}else if("match"===e[0]){t=t||cn(e[1]);for(let t=2;t<e.length-1;t+=2)r.push(e[t+1]);r.push(e[e.length-1])}else if("step"===e[0]){t=t||cn(e[1]);for(let t=1;t<e.length-1;t+=2)r.push(e[t+1])}t&&(e.length=0,e.push("any",...r));for(let t=1;t<e.length;t++)pn(e[t])}function cn(e){if(!Array.isArray(e))return!1;if("pitch"===(t=e[0])||"distance-from-center"===t)return!0;var t;for(let t=1;t<e.length;t++){if(cn(e[t]))return!0}return!1}const fn=new Set(["in","==","!=",">",">=","<","<=","to-boolean"]);function dn(e,t){return e<t?-1:e>t?1:0}function mn(e){if(!Array.isArray(e))return!1;if("within"===e[0])return!0;for(let t=1;t<e.length;t++)if(mn(e[t]))return!0;return!1}function yn(e){if(!e)return!0;const t=e[0];if(e.length<=1)return"any"!==t;var r;return"=="===t?hn(e[1],e[2],"=="):"!="===t?bn(hn(e[1],e[2],"==")):"<"===t||">"===t||"<="===t||">="===t?hn(e[1],e[2],t):"any"===t?(r=e.slice(1),["any"].concat(r.map(yn))):"all"===t?["all"].concat(e.slice(1).map(yn)):"none"===t?["all"].concat(e.slice(1).map(yn).map(bn)):"in"===t?gn(e[1],e.slice(2)):"!in"===t?bn(gn(e[1],e.slice(2))):"has"===t?vn(e[1]):"!has"===t?bn(vn(e[1])):"within"!==t||e}function hn(e,t,r){switch(e){case"$type":return[`filter-type-${r}`,t];case"$id":return[`filter-id-${r}`,t];default:return[`filter-${r}`,e,t]}}function gn(e,t){if(0===t.length)return!1;switch(e){case"$type":return["filter-type-in",["literal",t]];case"$id":return["filter-id-in",["literal",t]];default:return t.length>200&&!t.some((e=>typeof e!=typeof t[0]))?["filter-in-large",e,["literal",t.sort(dn)]]:["filter-in-small",e,["literal",t]]}}function vn(e){switch(e){case"$type":return!0;case"$id":return["filter-has-id"];default:return["filter-has",e]}}function bn(e){return["!",e]}var xn=["type","source","source-layer","minzoom","maxzoom","filter","layout"];function wn(e,t){const r={};for(const t in e)"ref"!==t&&(r[t]=e[t]);return xn.forEach((e=>{e in t&&(r[e]=t[e])})),r}function kn(e){e=e.slice();const t=Object.create(null);for(let r=0;r<e.length;r++)t[e[r].id]=e[r];for(let r=0;r<e.length;r++)"ref"in e[r]&&(e[r]=wn(e[r],t[e[r].ref]));return e}var zn={thin:100,hairline:100,"ultra-light":100,"extra-light":100,light:200,book:300,regular:400,normal:400,plain:400,roman:400,standard:400,medium:500,"semi-bold":600,"demi-bold":600,bold:700,heavy:800,black:800,"extra-bold":800,"ultra-black":900,"extra-black":900,"ultra-bold":900,"heavy-black":900,fat:900,poster:900},Mn=" ",Sn=/(italic|oblique)$/i,jn={},qn=ie((function(e,t,r){var n=jn[e];if(!n){Array.isArray(e)||(e=[e]);for(var o=400,i="normal",a=[],s=0,l=e.length;s<l;++s){var u=e[s].split(" "),p=u[u.length-1].toLowerCase();for(var c in"normal"==p||"italic"==p||"oblique"==p?(i=p,u.pop(),p=u[u.length-1].toLowerCase()):Sn.test(p)&&(p=p.replace(Sn,""),i=u[u.length-1].replace(p,"")),zn){var f=u.length>1?u[u.length-2].toLowerCase():"";if(p==c||p==c.replace("-","")||f+"-"+p==c){o=zn[c],u.pop(),f&&c.startsWith(f)&&u.pop();break}}"number"==typeof p&&(o=p);var d=u.join(Mn).replace("Klokantech Noto Sans","Noto Sans");-1!==d.indexOf(Mn)&&(d='"'+d+'"'),a.push(d)}n=jn[e]=[i,o,a]}return n[0]+Mn+n[1]+Mn+t+"px"+(r?"/"+r:"")+Mn+n[2]}));const Tn="https://api.mapbox.com";function En(e){const t="mapbox://";return 0!==e.indexOf(t)?"":e.slice(t.length)}function $n(e,t){const r=En(e);if(!r)return decodeURI(new URL(e,location.href).href);const n="styles/";if(0!==r.indexOf(n))throw new Error(`unexpected style url: ${e}`);const o=r.slice(n.length);return`${Tn}/styles/v1/${o}?&access_token=${t}`}function _n(e,t,r,n){const o=new URL(e,n),i=En(e);if(!i)return t?(o.searchParams.set(r,t),decodeURI(o.href)):decodeURI(o.href);if("mapbox.satellite"===i){return`https://api.mapbox.com/v4/${i}/{z}/{x}/{y}${window.devicePixelRatio>=1.5?"@2x":""}.webp?access_token=${t}`}return`https://{a-d}.tiles.mapbox.com/v4/${i}/{z}/{x}/{y}.vector.pbf?access_token=${t}`}const Cn={},In={};let An=0;function Fn(e){return e.id||(e.id=An++),e.id}function Pn(e,t){return Fn(e)+"."+p.getUid(t)}function Dn(e){let t=Cn[e.id];return t||(t={},Cn[Fn(e)]=t),t}function On(e){let t=In[e.id];return t||(t={},In[Fn(e)]=t),t}function Rn(e){return e*Math.PI/180}const Ln=function(){const e=[];for(let t=78271.51696402048;e.length<=24;t/=2)e.push(t);return e}();function Nn(e,t){if("undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&"undefined"!=typeof OffscreenCanvas)return new OffscreenCanvas(e,t);const r=document.createElement("canvas");return r.width=e,r.height=t,r}function Un(e,t){let r=0;const n=t.length;for(;r<n;++r){if(t[r]<e&&r+1<n){const n=t[r]/t[r+1];return r+Math.log(t[r]/e)/Math.log(n)}}return n-1}const Vn={};function Gn(e,t,r={},n){if(t in Vn)return n&&(n.request=Vn[t][0]),Vn[t][1];const o=r.transformRequest&&r.transformRequest(t,e)||new Request(t);o.headers.get("Accept")||o.headers.set("Accept","application/json"),n&&(n.request=o);const i=fetch(o).then((function(e){return delete Vn[t],e.ok?e.json():Promise.reject(new Error("Error fetching source "+t))})).catch((function(e){return delete Vn[t],Promise.reject(new Error("Error fetching source "+t))}));return Vn[t]=[o,i],i}function Wn(e,t){if("string"!=typeof e)return Promise.resolve(e);if(!e.trim().startsWith("{"))return Gn("Style",e=$n(e,t.accessToken),t);try{const t=JSON.parse(e);return Promise.resolve(t)}catch(e){return Promise.reject(e)}}function Jn(e,t){if(t.transformRequest){const r=t.transformRequest(e,"Tiles");if(r instanceof Request)return decodeURI(r.url)}return e}const Zn={};function Bn(e,t,r={}){const n=[t,JSON.stringify(e)].toString();let o=Zn[n];if(!o||r.transformRequest){const i=e.url;if(i&&!e.tiles){const n=_n(i,r.accessToken,r.accessTokenParam||"access_token",t||location.href);if(i.startsWith("mapbox://"))o=Promise.resolve(Object.assign({},e,{url:void 0,tiles:u.expandUrl(n)}));else{const e={};o=Gn("Source",n,r,e).then((function(t){return t.tiles=t.tiles.map((function(n){return"tms"===t.scheme&&(n=n.replace("{y}","{-y}")),Jn(_n(n,r.accessToken,r.accessTokenParam||"access_token",e.request.url),r)})),Promise.resolve(t)}))}}else e=Object.assign({},e,{tiles:e.tiles.map((function(n){return"tms"===e.scheme&&(n=n.replace("{y}","{-y}")),Jn(_n(n,r.accessToken,r.accessTokenParam||"access_token",t||location.href),r)}))}),o=Promise.resolve(Object.assign({},e));Zn[n]=o}return o}function Xn(e,t,r,n){const o=document.createElement("canvas"),i=[2*r*t.pixelRatio+t.width,2*r*t.pixelRatio+t.height];o.width=i[0],o.height=i[1];const a=o.getContext("2d");a.drawImage(e,t.x,t.y,t.width,t.height,r*t.pixelRatio,r*t.pixelRatio,t.width,t.height);const s=a.getImageData(0,0,i[0],i[1]);a.globalCompositeOperation="destination-over",a.fillStyle=`rgba(${255*n.r},${255*n.g},${255*n.b},${n.a})`;const l=s.data;for(let e=0,n=s.width;e<n;++e)for(let o=0,i=s.height;o<i;++o){l[4*(o*n+e)+3]>0&&a.arc(e,o,r*t.pixelRatio,0,2*Math.PI)}return a.fill(),o}function Hn(e,t,r){const n=Math.max(0,Math.min(1,(r-e)/(t-e)));return n*n*(3-2*n)}function Yn(e,t,r){const n=document.createElement("canvas");n.width=t.width,n.height=t.height;const o=n.getContext("2d");o.drawImage(e,t.x,t.y,t.width,t.height,0,0,t.width,t.height);const i=o.getImageData(0,0,t.width,t.height),a=i.data;for(let e=0,t=i.width;e<t;++e)for(let n=0,o=i.height;n<o;++n){const o=4*(n*t+e),i=.75,s=.1,l=Hn(i-s,i+s,a[o+3]/255);l>0?(a[o+0]=Math.round(255*r.r*l),a[o+1]=Math.round(255*r.g*l),a[o+2]=Math.round(255*r.b*l),a[o+3]=Math.round(255*l)):a[o+3]=0}return o.putImageData(i,0,0),n}const Kn=Array(256).join(" ");function Qn(e,t){if(t>=.05){let r="";const n=e.split("\n"),o=Kn.slice(0,Math.round(t/.1));for(let e=0,t=n.length;e<t;++e)e>0&&(r+="\n"),r+=n[e].split("").join(o);return r}return e}let eo;function to(){return eo||(eo=Nn(1,1).getContext("2d")),eo}function ro(e,t){return to().measureText(e).width+(e.length-1)*t}const no={};function oo(e,t,r,n){if(-1!==e.indexOf("\n")){const o=e.split("\n"),i=[];for(let e=0,a=o.length;e<a;++e)i.push(oo(o[e],t,r,n));return i.join("\n")}const o=r+","+t+","+e+","+n;let i=no[o];if(!i){const a=e.split(" ");if(a.length>1){const e=to();e.font=t;const o=e.measureText("M").width*r;let s="";const l=[];for(let e=0,t=a.length;e<t;++e){const t=a[e],r=s+(s?" ":"")+t;ro(r,n)<=o?s=r:(s&&l.push(s),s=t)}s&&l.push(s);for(let e=0,t=l.length;e<t&&t>1;++e){const r=l[e];if(ro(r,n)<.35*o){const o=e>0?ro(l[e-1],n):1/0,i=e<t-1?ro(l[e+1],n):1/0;l.splice(e,1),t-=1,o<i?(l[e-1]+=" "+r,e-=1):l[e]=r+" "+l[e]}}for(let e=0,t=l.length-1;e<t;++e){const r=l[e],i=l[e+1];if(ro(r,n)>.7*o&&ro(i,n)<.6*o){const a=r.split(" "),s=a.pop();ro(s,n)<.2*o&&(l[e]=a.join(" "),l[e+1]=s+" "+i),t-=1}}i=l.join("\n")}else i=e;i=Qn(i,n),no[o]=i}return i}const io=/font-family: ?([^;]*);/,ao=/("|')/g;let so;function lo(e){if(!so){so={};const e=document.styleSheets;for(let t=0,r=e.length;t<r;++t){const r=e[t];try{const e=r.rules||r.cssRules;if(e)for(let t=0,r=e.length;t<r;++t){const r=e[t];if(5==r.type){const e=r.cssText.match(io);so[e[1].replace(ao,"")]=!0}}}catch(e){}}}return e in so}const uo={};function po(e,t="https://cdn.jsdelivr.net/npm/@fontsource/{font-family}/{fontweight}{-fontstyle}.css"){const r=e.toString();if(r in uo)return uo[r];const n=[];for(let t=0,r=e.length;t<r;++t){e[t]=e[t].replace("Arial Unicode MS","Arial");const r=e[t],o=qn(r,1);l.registerFont(o);const i=o.split(" ");n.push([i.slice(3).join(" ").replace(/"/g,""),i[1],i[0]])}for(let e=0,r=n.length;e<r;++e){const r=n[e],o=r[0];if(!lo(o)&&100!==l.checkedFonts.get(`${r[2]}\n${r[1]} \n${o}`)){const e=t.replace("{font-family}",o.replace(/ /g,"-").toLowerCase()).replace("{Font+Family}",o.replace(/ /g,"+")).replace("{fontweight}",r[1]).replace("{-fontstyle}",r[2].replace("normal","").replace(/(.+)/,"-$1")).replace("{fontstyle}",r[2]);if(!document.querySelector('link[href="'+e+'"]')){const t=document.createElement("link");t.href=e,t.rel="stylesheet",document.head.appendChild(t)}}}return uo[r]=e,e}const co={Point:1,MultiPoint:1,LineString:2,MultiLineString:2,Polygon:3,MultiPolygon:3},fo={center:[.5,.5],left:[0,.5],right:[1,.5],top:[.5,0],bottom:[.5,1],"top-left":[0,0],"top-right":[1,0],"bottom-left":[0,1],"bottom-right":[1,1]},mo=function(e,t){const r=rn(e,t);if("error"===r.result)throw new Error(r.value.map((e=>`${e.key}: ${e.message}`)).join(", "));return r.value},yo={},ho={zoom:0};let go,vo;function bo(e,t,r,n,o,i,a){const s=e.id;i||(i={},console.warn("No functionCache provided to getValue()")),i[s]||(i[s]={});const l=i[s];if(!l[r]){let n=(e[t]||yo)[r];const o=an[`${t}_${e.type}`][r];void 0===n&&(n=o.default);let i=(u=n,Array.isArray(u)&&u.length>0&&"string"==typeof u[0]&&u[0]in Br);if(!i&&Yr(n)&&(n=he(n,o),i=!0),i){const e=mo(n,o);l[r]=e.evaluate.bind(e)}else"color"==o.type&&(n=me.parse(n)),l[r]=function(){return n}}var u;return ho.zoom=n,l[r](ho,o,a)}function xo(e,t,r,n){if(!bo(e,"layout","icon-allow-overlap",t,r,n))return"declutter";return bo(e,"layout","icon-ignore-placement",t,r,n)?"none":"obstacle"}function wo(e,t,r,n,o){return o||console.warn("No filterCache provided to evaluateFilter()"),e in o||(o[e]=ln(t).filter),ho.zoom=n,o[e](ho,r)}let ko=!1;function zo(e,t){if(e){if(!ko&&(0===e.a||0===t))return;const r=e.a;return t=void 0===t?1:t,0===r?"transparent":"rgba("+Math.round(255*e.r/r)+","+Math.round(255*e.g/r)+","+Math.round(255*e.b/r)+","+r*t+")"}return e}const Mo=/\{[^{}}]*\}/g;function So(e,t){return e.replace(Mo,(function(e){return t[e.slice(1,-1)]||""}))}let jo=!1;const qo={};function To(e,t,r,n=Ln,o=undefined,i=undefined,a=undefined,s=undefined){if("string"==typeof t&&(t=JSON.parse(t)),8!=t.version)throw new Error("glStyle version 8 required.");let l,u,p;if(qo[Pn(t,e)]=Array.from(arguments),i)if("undefined"!=typeof Image){const t=new Image;t.crossOrigin="anonymous",t.onload=function(){l=t,u=[t.width,t.height],e.changed(),t.onload=null},t.src=i}else if("undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope){const e=self;e.postMessage({action:"loadImage",src:i}),e.addEventListener("message",(function(e){"imageLoaded"===e.data.action&&e.data.src===i&&(l=e.data.image,u=[l.width,l.height])}))}const c=kn(t.layers),f={},d=[],m={},y={},h=Dn(t),g=On(t);let v;for(let e=0,n=c.length;e<n;++e){const n=c[e],o=n.id;if("string"==typeof r&&n.source==r||-1!==r.indexOf(o)){const r=n["source-layer"];if(v){if(n.source!==v)throw new Error(`Layer "${o}" does not use source "${v}`)}else{v=n.source;const e=t.sources[v];if(!e)throw new Error(`Source "${v}" is not defined`);const r=e.type;if("vector"!==r&&"geojson"!==r)throw new Error(`Source "${v}" is not of type "vector" or "geojson", but "${r}"`)}let i=f[r];i||(i=[],f[r]=i),i.push({layer:n,index:e}),d.push(o)}}const b=new O.default,x=new F.default,w=[],k=function(r,i,c){const d=r.getProperties(),v=f[d.layer];if(!v)return;let k=n.indexOf(i);-1==k&&(k=Un(i,n));const z=co[r.getGeometry().getType()],M={id:r.getId(),properties:d,type:z},S=e.get("mapbox-featurestate")[r.getId()];let j,q=-1;for(let n=0,f=v.length;n<f;++n){const f=v[n],T=f.layer,E=T.id;if(void 0!==c&&c!==E)continue;const $=T.layout||yo,_=T.paint||yo;if("none"===$.visibility||"minzoom"in T&&k<T.minzoom||"maxzoom"in T&&k>=T.maxzoom)continue;const C=T.filter;if(!C||wo(E,C,M,k,g)){let n,c,g,v,E,C;j=T;const I=f.index;if(3==z&&("fill"==T.type||"fill-extrusion"==T.type))if(c=bo(T,"paint",T.type+"-opacity",k,M,h,S),T.type+"-pattern"in _){const e=bo(T,"paint",T.type+"-pattern",k,M,h,S);if(e){const t="string"==typeof e?So(e,d):e.toString();if(l&&o&&o[t]){++q,C=w[q],C&&C.getFill()&&!C.getStroke()&&!C.getText()||(C=new R.default({fill:new F.default}),w[q]=C),g=C.getFill(),C.setZIndex(I);const e=t+"."+c;let r=y[e];if(!r){const n=o[t],i=Nn(n.width,n.height),a=i.getContext("2d");a.globalAlpha=c,a.drawImage(l,n.x,n.y,n.width,n.height,0,0,n.width,n.height),r=a.createPattern(i,"repeat"),y[e]=r}g.setColor(r)}}}else n=zo(bo(T,"paint",T.type+"-color",k,M,h,S),c),T.type+"-outline-color"in _&&(E=zo(bo(T,"paint",T.type+"-outline-color",k,M,h,S),c)),E||(E=n),(n||E)&&(++q,C=w[q],(!C||n&&!C.getFill()||!n&&C.getFill()||E&&!C.getStroke()||!E&&C.getStroke()||C.getText())&&(C=new R.default({fill:n?new F.default:void 0,stroke:E?new O.default:void 0}),w[q]=C),n&&(g=C.getFill(),g.setColor(n)),E&&(v=C.getStroke(),v.setColor(E),v.setWidth(.5)),C.setZIndex(I));if(1!=z&&"line"==T.type){n=!("line-pattern"in _)&&"line-color"in _?zo(bo(T,"paint","line-color",k,M,h,S),bo(T,"paint","line-opacity",k,M,h,S)):void 0;const e=bo(T,"paint","line-width",k,M,h,S);n&&e>0&&(++q,C=w[q],C&&C.getStroke()&&!C.getFill()&&!C.getText()||(C=new R.default({stroke:new O.default}),w[q]=C),v=C.getStroke(),v.setLineCap(bo(T,"layout","line-cap",k,M,h,S)),v.setLineJoin(bo(T,"layout","line-join",k,M,h,S)),v.setMiterLimit(bo(T,"layout","line-miter-limit",k,M,h,S)),v.setColor(n),v.setWidth(e),v.setLineDash(_["line-dasharray"]?bo(T,"paint","line-dasharray",k,M,h,S).map((function(t){return t*e})):null),C.setZIndex(I))}let N,U,V,G,W,J,Z,B,X,H=!1,Y=null,K=0;if((1==z||2==z)&&"icon-image"in $){const t=bo(T,"layout","icon-image",k,M,h,S);if(t){let n;N="string"==typeof t?So(t,d):t.toString();const a=s?s(e,N):void 0;if(l&&o&&o[N]||a){const e=bo(T,"layout","icon-rotation-alignment",k,M,h,S);if(2==z){const t=r.getGeometry();if(t.getFlatMidpoint||t.getFlatMidpoints){const r=t.getExtent();if(Math.sqrt(Math.max(Math.pow((r[2]-r[0])/i,2),Math.pow((r[3]-r[1])/i,2)))>150){const r="MultiLineString"===t.getType()?t.getFlatMidpoints():t.getFlatMidpoint();vo||(go=[NaN,NaN],vo=new D.default("Point",go,[],{},null)),n=vo,go[0]=r[0],go[1]=r[1];if("line"===bo(T,"layout","symbol-placement",k,M,h,S)&&"map"===e){const e=t.getStride(),n=t.getFlatCoordinates();for(let t=0,o=n.length-e;t<o;t+=e){const o=n[t],i=n[t+1],a=n[t+e],s=n[t+e+1],l=Math.min(o,a),u=Math.min(i,s),p=Math.max(o,a),c=Math.max(i,s);if(r[0]>=l&&r[0]<=p&&r[1]>=u&&r[1]<=c){K=Math.atan2(i-s,a-o);break}}}}}}if(2!==z||n){const t=bo(T,"layout","icon-size",k,M,h,S),r=void 0!==_["icon-color"]?bo(T,"paint","icon-color",k,M,h,S):null;if(!r||0!==r.a){const n=bo(T,"paint","icon-halo-color",k,M,h,S),i=bo(T,"paint","icon-halo-width",k,M,h,S);let s=`${N}.${t}.${i}.${n}`;if(null!==r&&(s+=`.${r}`),U=m[s],!U){const c=xo(T,k,M,h);let f;"icon-offset"in $&&(f=bo(T,"layout","icon-offset",k,M,h,S).slice(0),f[1]*=-1);let d=r?[255*r.r,255*r.g,255*r.b,r.a]:void 0;if(a){const t={color:d,rotateWithView:"map"===e,displacement:f,declutterMode:c};"string"==typeof a?t.src=a:(t.img=a,t.imgSize=[a.width,a.height]),U=new P.default(t)}else{const a=o[N];let s,m,y,h;i?(a.sdf?(s=Xn(Yn(l,a,r),{x:0,y:0,width:a.width,height:a.height,pixelRatio:a.pixelRatio},i,n),d=void 0):s=Xn(l,a,i,n),m=[s.width,s.height]):(a.sdf?(p||(p=Yn(l,{x:0,y:0,width:u[0],height:u[1]},{r:1,g:1,b:1,a:1})),s=p):s=l,m=u,y=[a.width,a.height],h=[a.x,a.y]),U=new P.default({color:d,img:s,imgSize:m,size:y,offset:h,rotateWithView:"map"===e,scale:t/a.pixelRatio,displacement:f,declutterMode:c})}m[s]=U}}U&&(++q,C=w[q],C&&C.getImage()&&!C.getFill()&&!C.getStroke()||(C=new R.default,w[q]=C),C.setGeometry(n),U.setRotation(K+Rn(bo(T,"layout","icon-rotate",k,M,h,S))),U.setOpacity(bo(T,"paint","icon-opacity",k,M,h,S)),U.setAnchor(fo[bo(T,"layout","icon-anchor",k,M,h,S)]),C.setImage(U),Y=C.getText(),C.setText(void 0),C.setZIndex(I),H=!0,V=!1)}else V=!0}}}if(1==z&&"circle"===T.type){++q,C=w[q],C&&C.getImage()&&!C.getFill()&&!C.getStroke()||(C=new R.default,w[q]=C);const e="circle-radius"in _?bo(T,"paint","circle-radius",k,M,h,S):5,t=zo(bo(T,"paint","circle-stroke-color",k,M,h,S),bo(T,"paint","circle-stroke-opacity",k,M,h,S)),r=zo(bo(T,"paint","circle-color",k,M,h,S),bo(T,"paint","circle-opacity",k,M,h,S)),n=bo(T,"paint","circle-stroke-width",k,M,h,S),o=e+"."+t+"."+r+"."+n;U=m[o],U||(U=new A.default({radius:e,stroke:t&&n>0?new O.default({width:n,color:t}):void 0,fill:r?new F.default({color:r}):void 0,declutterMode:"none"}),m[o]=U),C.setImage(U),Y=C.getText(),C.setText(void 0),C.setGeometry(void 0),C.setZIndex(I),H=!0}if("text-field"in $){Z=Math.round(bo(T,"layout","text-size",k,M,h,S));const e=bo(T,"layout","text-font",k,M,h,S);J=bo(T,"layout","text-line-height",k,M,h,S),W=qn(a?a(e,t.metadata?t.metadata["ol:webfonts"]:void 0):e,Z,J),W.includes("sans-serif")||(W+=",sans-serif"),B=bo(T,"layout","text-letter-spacing",k,M,h,S),X=bo(T,"layout","text-max-width",k,M,h,S);const r=bo(T,"layout","text-field",k,M,h,S);G="object"==typeof r&&r.sections?1===r.sections.length?r.toString():r.sections.reduce(((t,r,n)=>{const o=r.fontStack?r.fontStack.split(","):e,i=qn(a?a(o):o,Z*(r.scale||1),J);let s=r.text;if("\n"===s)return t.push("\n",""),t;if(2!=z){s=oo(s,i,X,B).split("\n");for(let e=0,r=s.length;e<r;++e)e>0&&t.push("\n",""),t.push(s[e],i);return t}t.push(Qn(s,B),i)}),[]):So(r,d).trim(),c=bo(T,"paint","text-opacity",k,M,h,S)}if(G&&c&&!V){H||(++q,C=w[q],C&&C.getText()&&!C.getFill()&&!C.getStroke()||(C=new R.default,w[q]=C),C.setImage(void 0),C.setGeometry(void 0)),C.getText()||C.setText(Y||new L.default({padding:[2,2,2,2]})),Y=C.getText();const e=$["text-transform"];"uppercase"==e?G=Array.isArray(G)?G.map(((e,t)=>t%2?e:e.toUpperCase())):G.toUpperCase():"lowercase"==e&&(G=Array.isArray(G)?G.map(((e,t)=>t%2?e:e.toLowerCase())):G.toLowerCase());const t=Array.isArray(G)?G:2==z?Qn(G,B):oo(G,W,X,B);Y.setText(t),Y.setFont(W),Y.setRotation(Rn(bo(T,"layout","text-rotate",k,M,h,S)));const r=bo(T,"layout","text-anchor",k,M,h,S),n=H||1==z?"point":bo(T,"layout","symbol-placement",k,M,h,S);let o;if("line-center"===n?(Y.setPlacement("line"),o="center"):Y.setPlacement(n),"line"===n&&"function"==typeof Y.setRepeat){const e=bo(T,"layout","symbol-spacing",k,M,h,S);Y.setRepeat(2*e)}Y.setOverflow("point"===n);let i=bo(T,"paint","text-halo-width",k,M,h,S);const a=bo(T,"layout","text-offset",k,M,h,S),s=bo(T,"paint","text-translate",k,M,h,S);let l=0,u=0;if("point"==n){o="center",-1!==r.indexOf("left")?(o="left",u=i):-1!==r.indexOf("right")&&(o="right",u=-i);const e=bo(T,"layout","text-rotation-alignment",k,M,h,S);Y.setRotateWithView("map"==e)}else Y.setMaxAngle(Rn(bo(T,"layout","text-max-angle",k,M,h,S))*G.length/t.length),Y.setRotateWithView(!1);Y.setTextAlign(o);let p="middle";0==r.indexOf("bottom")?(p="bottom",l=-i-.5*(J-1)*Z):0==r.indexOf("top")&&(p="top",l=i+.5*(J-1)*Z),Y.setTextBaseline(p);const f=bo(T,"layout","text-justify",k,M,h,S);Y.setJustify("auto"===f?void 0:f),Y.setOffsetX(a[0]*Z+u+s[0]),Y.setOffsetY(a[1]*Z+l+s[1]),x.setColor(zo(bo(T,"paint","text-color",k,M,h,S),c)),Y.setFill(x);const d=zo(bo(T,"paint","text-halo-color",k,M,h,S),c);if(d){b.setColor(d),i*=2;const e=.5*Z;b.setWidth(i<=e?i:e),Y.setStroke(b)}else Y.setStroke(void 0);const m=bo(T,"layout","text-padding",k,M,h,S),y=Y.getPadding();m!==y[0]&&(y[0]=m,y[1]=m,y[2]=m,y[3]=m),C.setZIndex(I)}}}return q>-1?(w.length=q+1,jo&&("set"in r?r.set("mapbox-layer",j):r.getProperties()["mapbox-layer"]=j),w):void 0};return e.setStyle(k),e.set("mapbox-source",v),e.set("mapbox-layers",d),e.set("mapbox-featurestate",e.get("mapbox-featurestate")||{}),k}function Eo(e,t){const r=e[0],n=r.width,o=r.height,i=r.data,a=new Uint8ClampedArray(i.length),s=2*t.resolution,l=n-1,u=o-1,p=[0,0,0,0],c=2*Math.PI,f=Math.PI/2,d=Math.PI*t.sunEl/180,m=Math.PI*t.sunAz/180,y=Math.cos(d),h=Math.sin(d),g=t.highlightColor,v=t.shadowColor,b=t.accentColor,x=t.encoding;let w,k,z,M,S,j,q,T,E,$,_,C,I,A,F,P,D,O,R,L,N,U;function V(e,t="mapbox"){return"mapbox"===t?.1*(256*e[0]*256+256*e[1]+e[2])-1e4:"terrarium"===t?256*e[0]+e[1]+e[2]/256-32768:void 0}for(k=0;k<=u;++k)for(S=0===k?0:k-1,j=k===u?u:k+1,w=0;w<=l;++w)z=0===w?0:w-1,M=w===l?l:w+1,q=4*(k*n+z),p[0]=i[q],p[1]=i[q+1],p[2]=i[q+2],p[3]=i[q+3],T=t.vert*V(p,x),q=4*(k*n+M),p[0]=i[q],p[1]=i[q+1],p[2]=i[q+2],p[3]=i[q+3],E=t.vert*V(p,x),$=(E-T)/s,q=4*(S*n+w),p[0]=i[q],p[1]=i[q+1],p[2]=i[q+2],p[3]=i[q+3],T=t.vert*V(p,x),q=4*(j*n+w),p[0]=i[q],p[1]=i[q+1],p[2]=i[q+2],p[3]=i[q+3],E=t.vert*V(p,x),_=(E-T)/s,I=Math.atan2(_,-$),I=I<0?f-I:I>f?c-I+f:f-I,C=Math.atan(Math.sqrt($*$+_*_)),U=h*Math.cos(C)+y*Math.sin(C)*Math.cos(m-I),A=Math.cos(C),F=255*U,R=Math.min(Math.max(2*t.sunEl,0),1),L=1.875-1.75*t.opacity,N=.5!==t.opacity?f*((Math.pow(L,C)-1)/(Math.pow(L,f)-1)):C,D={r:(1-A)*b.r*R*255,g:(1-A)*b.g*R*255,b:(1-A)*b.b*R*255,a:(1-A)*b.a*R*255},P=Math.abs(((I+m)/Math.PI+.5)%2-1),O={r:(g.r*(1-P)+v.r*P)*F,g:(g.g*(1-P)+v.g*P)*F,b:(g.b*(1-P)+v.b*P)*F,a:(g.a*(1-P)+v.a*P)*F},q=4*(k*n+w),a[q]=D.r*(1-P)+O.r,a[q+1]=D.g*(1-P)+O.g,a[q+2]=D.b*(1-P)+O.b,a[q+3]=i[q+3]*t.opacity*R*Math.sin(N);return new ImageData(a,n,o)}function $o(e,t=512){return e.getExtent()?E.createXYZ({extent:e.getExtent(),tileSize:t,maxZoom:22}).getResolutions():Ln}function _o(e,t){if(!t.accessToken){t=Object.assign({},t);new URL(e).searchParams.forEach(((e,r)=>{t.accessToken=e,t.accessTokenParam=r}))}return t}function Co(e,t,r="",n={},o=undefined){let i,a,s,l,u=!0;return"string"==typeof r||Array.isArray(r)?l=r:(s=r,l=s.source||s.layers,n=s),"string"==typeof n?(i=n,s={}):(i=n.styleUrl,s=n),!1===s.updateSource&&(u=!1),o||(o=s.resolutions),i||"string"!=typeof t||t.trim().startsWith("{")||(i=t),i&&(i=i.startsWith("data:")?location.href:$n(i,s.accessToken),s=_o(i,s)),new Promise((function(r,n){Wn(t,s).then((function(t){if(8!=t.version)return n(new Error("glStyle version 8 required."));if(!(e instanceof K.default||e instanceof ee.default))return n(new Error("Can only apply to VectorLayer or VectorTileLayer"));const p=e instanceof ee.default?"vector":"geojson";if(l?a=Array.isArray(l)?t.layers.find((function(e){return e.id===l[0]})).source:l:(a=Object.keys(t.sources).find((function(e){return t.sources[e].type===p})),l=a),!a)return n(new Error(`No ${p} source found in the glStyle.`));function c(){if(!u)return Promise.resolve();if(e instanceof ee.default)return Ro(t.sources[a],i,s).then((function(t){const r=e.getSource();if(r?t!==r&&(r.setTileUrlFunction(t.getTileUrlFunction()),"function"==typeof r.setUrls&&"function"==typeof t.getUrls&&r.setUrls(t.getUrls()),r.format_||(r.format_=t.format_),r.getAttributions()||r.setAttributions(t.getAttributions()),r.getTileLoadFunction()===S.defaultLoadFunction&&r.setTileLoadFunction(t.getTileLoadFunction()),q.equivalent(r.getProjection(),t.getProjection())&&(r.tileGrid=t.getTileGrid())):e.setSource(t),!isFinite(e.getMaxResolution())&&!isFinite(e.getMinZoom())){const t=e.getSource().getTileGrid();e.setMaxResolution(t.getResolution(t.getMinZoom()))}}));const r=t.sources[a];let n=e.getSource();n&&n.get("mapbox-source")===r||(n=Uo(r,i,s));const o=e.getSource();return o?n!==o&&(o.getAttributions()||o.setAttributions(n.getAttributions()),o.format_||(o.format_=n.getFormat()),o.url_=n.getUrl()):e.setSource(n),Promise.resolve()}let f,d,m,y;function h(){if(y||t.sprite&&!d)y?(e.setStyle(y),c().then(r).catch(n)):n(new Error("Something went wrong trying to apply style."));else{if(s.projection&&!o){const e=q.get(s.projection).getUnits();"m"!==e&&(o=Ln.map((t=>t/q.METERS_PER_UNIT[e])))}y=To(e,t,l,o,d,m,po,s.getImage),e.getStyle()?c().then(r).catch(n):n(new Error(`Nothing to show for source [${a}]`))}}if(t.sprite){const e=new URL(function(e,t,r){const n=En(e);if(!n)return decodeURI(new URL(e,r).href);const o="sprites/";if(0!==n.indexOf(o))throw new Error(`unexpected sprites url: ${e}`);const i=n.slice(o.length);return`${Tn}/styles/v1/${i}/sprite?access_token=${t}`}(t.sprite,s.accessToken,i||location.href));f=window.devicePixelRatio>=1.5?.5:1;const r=.5==f?"@2x":"";let o=e.origin+e.pathname+r+".json"+e.search;new Promise((function(t,r){Gn("Sprite",o,s).then(t).catch((function(n){o=e.origin+e.pathname+".json"+e.search,Gn("Sprite",o,s).then(t).catch(r)}))})).then((function(t){if(void 0===t&&n(new Error("No sprites found.")),d=t,m=e.origin+e.pathname+r+".png"+e.search,s.transformRequest){const e=s.transformRequest(m,"SpriteImage");e instanceof Request&&(m=encodeURI(e.url))}h()})).catch((function(e){n(new Error(`Sprites cannot be loaded: ${o}: ${e.message}`))}))}else h()})).catch(n)}))}const Io={};function Ao(e,t,r={}){return Wn(t,r).then((function(t){!function(e,t,r){t.layers.some((function(t){if("background"===t.type){if(e instanceof V.default)return e.setBackground((function(e){return Do(t,e,r,{})})),!0;if(e instanceof J.default||e instanceof G.default)return e.getLayers().push(Oo(t,r,{})),!0}}))}(e,t,r)}))}function Fo(e,t){let r;return e.some((function(e){if(e.id==t)return r=e.source,!0})),r}function Po(e,t,r){const n=new H.default({tileJSON:t,tileSize:e.tileSize||t.tileSize||512}),o=n.getTileJSON(),i=n.getTileGrid(),a=q.get(r.projection||"EPSG:3857"),s=function(e,t){const r=e.bounds;if(r){const e=q.fromLonLat([r[0],r[1]],t),n=q.fromLonLat([r[2],r[3]],t);return[e[0],e[1],n[0],n[1]]}return q.get(t).getExtent()}(o,a),l=a.getExtent(),u=o.minzoom||0,p=o.maxzoom||22,c={attributions:n.getAttributions(),projection:a,tileGrid:new X.default({origin:l?$.getTopLeft(l):i.getOrigin(0),extent:s||i.getExtent(),minZoom:u,resolutions:$o(a,t.tileSize).slice(0,p+1),tileSize:i.getTileSize(0)})};return Array.isArray(o.tiles)?c.urls=o.tiles:c.url=o.tiles,c}function Do(e,t,r,n){const o={id:e.id,type:e.type},i=e.layout||{},a=e.paint||{};o.paint=a;const s=Un(t,r.resolutions||Ln);let l,u;return void 0!==a["background-color"]&&(l=bo(o,"paint","background-color",s,Io,n)),void 0!==a["background-opacity"]&&(u=bo(o,"paint","background-opacity",s,Io,n)),"none"==i.visibility?void 0:zo(l,u)}function Oo(e,t,r){const n=document.createElement("div");return n.className="ol-mapbox-style-background",n.style.position="absolute",n.style.width="100%",n.style.height="100%",new V.default({source:new B.default({}),render(o){const i=Do(e,o.viewState.resolution,t,r);return n.style.backgroundColor=i,n}})}function Ro(e,t,r){return new Promise((function(n,o){Bn(e,t,r).then((function(t){const o=Po(e,t,r);o.format=new W.default,n(new te.default(o))})).catch(o)}))}function Lo(e){return`{bbox-${(e?e.getCode():"EPSG:3857").toLowerCase().replace(/[^a-z0-9]/g,"-")}}`}function No(e,t,r){const n=new Y.default;return Bn(e,t,r).then((function(t){const o=new H.default({interpolate:void 0===r.interpolate||r.interpolate,transition:0,crossOrigin:"anonymous",tileJSON:t});o.tileGrid=Po(e,t,r).tileGrid,r.projection&&(o.projection=q.get(r.projection));const i=o.getTileUrlFunction();o.setTileUrlFunction((function(e,t,r){const n=Lo(r);let a=i(e,t,r);if(-1!=a.indexOf(n)){const t=o.getTileGrid().getTileCoordExtent(e);a=a.replace(n,t.toString())}return a})),o.set("mapbox-source",e),n.setSource(o)})).catch((function(e){n.setSource(void 0)})),n}function Uo(e,t,r){const n=r.projection?new N.default({dataProjection:r.projection}):new N.default,o=e.data,i={};if("string"==typeof o){let i=_n(o,r.accessToken,r.accessTokenParam||"access_token",t||location.href);if(r.transformRequest){const e=r.transformRequest(i,"GeoJSON");e instanceof Request&&(i=decodeURI(e.url))}if(/\{bbox-[0-9a-z-]+\}/.test(i)){const t=(e,t,r)=>{const n=Lo(r);return i.replace(n,`${e.join(",")}`)},r=new Q.default({attributions:e.attribution,format:n,url:t,strategy:T.bbox});return r.set("mapbox-source",e),r}return new Q.default({attributions:e.attribution,format:n,url:i})}i.features=n.readFeatures(o,{featureProjection:q.getUserProjection()||"EPSG:3857"});const a=new Q.default(Object.assign({attributions:e.attribution,format:n},i));return a.set("mapbox-source",e),a}function Vo(e,t,r){let n=null;return function(o){e.paint&&"raster-opacity"in e.paint&&o.frameState.viewState.zoom!==n&&(n=o.frameState.viewState.zoom,delete r[e.id],function(e,t,r,n){const o=bo(e,"paint","raster-opacity",r,Io,n);t.setOpacity(o)}(e,t,n,r))}}function Go(e,t,r,n){const o=Dn(e),i=e.layers,a=r.type,s=r.source||Fo(i,r.ref),l=e.sources[s];let u;if("background"==a)u=Oo(r,n,o);else if("vector"==l.type)u=function(e,t,r){const n=new ee.default({declutter:!0,visible:!1});return Ro(e,t,r).then((function(t){t.set("mapbox-source",e),n.setSource(t)})).catch((function(e){n.setSource(void 0)})),n}(l,t,n);else if("raster"==l.type)u=No(l,t,n),u.setVisible(!r.layout||"none"!==r.layout.visibility),u.on("prerender",Vo(r,u,o));else if("geojson"==l.type)u=function(e,t,r){return new K.default({declutter:!0,source:Uo(e,t,r),visible:!1})}(l,t,n);else if("raster-dem"==l.type&&"hillshade"==r.type){const e=function(e,t,r){const n=No(e,t,r);return new U.default({source:new Z.default({operationType:"image",operation:Eo,sources:[n]})})}(l,t,n);u=e,e.getSource().on("beforeoperations",(function(e){const t=e.data;t.resolution=e.resolution;const i=Un(e.resolution,n.resolutions||Ln);t.encoding=l.encoding,t.vert=5*bo(r,"paint","hillshade-exaggeration",i,Io,o),t.sunAz=bo(r,"paint","hillshade-illumination-direction",i,Io,o),t.sunEl=35,t.opacity=.3,t.highlightColor=bo(r,"paint","hillshade-highlight-color",i,Io,o),t.shadowColor=bo(r,"paint","hillshade-shadow-color",i,Io,o),t.accentColor=bo(r,"paint","hillshade-accent-color",i,Io,o)})),u.setVisible(!r.layout||"none"!==r.layout.visibility)}const p=s;return u&&u.set("mapbox-source",p),u}function Wo(e,t,r,n){const o=[];let i=null;if(t instanceof J.default){if(i=t.getView(),!i.isDef()&&!i.getRotation()&&!i.getResolutions()){const e=n.projection?q.get(n.projection):i.getProjection();i=new re.default(Object.assign(i.getProperties(),{maxResolution:Ln[0]/q.METERS_PER_UNIT[e.getUnits()],projection:n.projection||i.getProjection()})),t.setView(i)}"center"in e&&!i.getCenter()&&i.setCenter(q.fromLonLat(e.center,i.getProjection())),"zoom"in e&&void 0===i.getZoom()&&i.setResolution(Ln[0]/q.METERS_PER_UNIT[i.getProjection().getUnits()]/Math.pow(2,e.zoom)),i.getCenter()&&void 0!==i.getZoom()||i.fit(i.getProjection().getExtent(),{nearest:!0,size:t.getSize()})}t.set("mapbox-style",e),t.set("mapbox-metadata",{styleUrl:r,options:n});const a=e.layers;let s,l,u,p=[];for(let i=0,c=a.length;i<c;++i){const c=a[i],f=c.type;if("heatmap"==f)throw new Error(`${f} layers are not supported`);u=c.source||Fo(a,c.ref),u&&u==l||(p.length&&(o.push(Zo(s,p,e,r,t,n)),p=[]),s=Go(e,r,c,n),s instanceof K.default||s instanceof ee.default||(p=[]),l=s.get("mapbox-source")),p.push(c.id)}return o.push(Zo(s,p,e,r,t,n)),Promise.all(o)}function Jo(e,t,r={}){let n,o;if(o="string"==typeof e||e instanceof HTMLElement?new J.default({target:e}):e,"string"==typeof t){const e=t.startsWith("data:")?location.href:$n(t,r.accessToken);r=_o(e,r),n=new Promise((function(n,i){Wn(t,r).then((function(t){Wo(t,o,e,r).then((function(){n(o)})).catch(i)})).catch((function(e){i(new Error(`Could not load ${t}: ${e.message}`))}))}))}else n=new Promise((function(e,n){Wo(t,o,!r.styleUrl||r.styleUrl.startsWith("data:")?location.href:$n(r.styleUrl,r.accessToken),r).then((function(){e(o)})).catch(n)}));return n}function Zo(e,t,r,n,o,i={}){let a=24,s=0;const l=r.layers;for(let e=0,r=l.length;e<r;++e){const r=l[e];-1!==t.indexOf(r.id)&&(a=Math.min("minzoom"in r?r.minzoom:0,a),s=Math.max("maxzoom"in r?r.maxzoom:24,s))}return new Promise((function(l,u){const p=function(){const p=e.getSource();if(p&&"error"!==p.getState()){if("getTileGrid"in p){const t=p.getTileGrid();if(t){const r=t.getMinZoom();(a>0||r>0)&&e.setMaxResolution(Math.min(Ln[a],t.getResolution(r))+1e-9),s<24&&e.setMinResolution(Ln[s]+1e-9)}}else a>0&&e.setMaxResolution(Ln[a]+1e-9);p instanceof Q.default||p instanceof te.default?Co(e,r,t,Object.assign({styleUrl:n},i)).then((function(){!function(e,t){function r(){const r=t.get("mapbox-style");if(!r)return;const n=kn(r.layers),o=e.get("mapbox-layers"),i=n.filter((function(e){return o.includes(e.id)})).some((function(e){return!e.layout||!e.layout.visibility||"visible"===e.layout.visibility}));e.get("visible")!==i&&e.setVisible(i)}e.on("change",r),r()}(e,o),l()})).catch(u):l()}else u(new Error("Error accessing data for source "+e.get("mapbox-source")))};e.set("mapbox-layers",t);const c=o.getLayers();-1===c.getArray().indexOf(e)&&c.push(e),e.getSource()?p():e.once("change:source",p)}))}function Bo(e,t){return e.get("mapbox-style").layers.find((function(e){return e.id===t}))}function Xo(e,t){const r=e.getLayers().getArray();for(let e=0,n=r.length;e<n;++e){const n=r[e].get("mapbox-layers");if(n&&-1!==n.indexOf(t))return r[e]}}function Ho(e,t){const r=[],n=e.getLayers().getArray();for(let e=0,o=n.length;e<o;++e)n[e].get("mapbox-source")===t&&r.push(n[e]);return r}class Yo extends ne.default{constructor(e){super(oe.default.ERROR),this.error=e}}class Ko extends ee.default{constructor(e){const t=!("declutter"in e)||e.declutter,r=new te.default({state:"loading",format:new W.default});super({source:r,background:e.background,declutter:t,className:e.className,opacity:e.opacity,visible:e.visible,zIndex:e.zIndex,minResolution:e.minResolution,maxResolution:e.maxResolution,minZoom:e.minZoom,maxZoom:e.maxZoom,renderOrder:e.renderOrder,renderBuffer:e.renderBuffer,renderMode:e.renderMode,map:e.map,updateWhileAnimating:e.updateWhileAnimating,updateWhileInteracting:e.updateWhileInteracting,preload:e.preload,useInterimTilesOnError:e.useInterimTilesOnError,properties:e.properties}),e.accessToken&&(this.accessToken=e.accessToken);Co(this,e.styleUrl,e.layers||e.source,{accessToken:this.accessToken}).then((()=>{r.setState("ready")})).catch((e=>{this.dispatchEvent(new Yo(e));this.getSource().setState("error")})),void 0===this.getBackground()&&Ao(this,e.styleUrl,{accessToken:this.accessToken})}}e.MapboxVectorLayer=Ko,e.addMapboxLayer=function(e,t,r){const n=e.get("mapbox-style"),o=n.layers;let i,a,s=-1;if(void 0!==r){const t=Bo(e,r);if(void 0===t)throw new Error(`Layer with id "${r}" not found.`);i=o.indexOf(t)}else i=o.length;if(i>0&&o[i-1].source===t.source?(s=i-1,a=-1):i<o.length&&o[i].source===t.source&&(s=i,a=0),-1===s){const{options:a,styleUrl:s}=e.get("mapbox-metadata"),l=Go(n,s,t,a);if(r){const t=Xo(e,r),n=e.getLayers().getArray().indexOf(t);e.getLayers().insertAt(n,l)}return o.splice(i,0,t),Zo(l,[t.id],n,s,e,a)}if(o.some((e=>e.id===t.id)))throw new Error(`Layer with id "${t.id}" already exists.`);const l=o[s].id,u=qo[Pn(e.get("mapbox-style"),Xo(e,l))];if(o.splice(i,0,t),u){const[e,r,n,o,i,s,p,c]=u;if(Array.isArray(n)){const e=n.indexOf(l)+a;n.splice(e,0,t.id)}To(e,r,n,o,i,s,p,c)}else Xo(e,o[s].id).changed();return Promise.resolve()},e.apply=Jo,e.applyBackground=Ao,e.applyStyle=Co,e.default=Jo,e.getFeatureState=function(e,t){const r="getLayers"in e?Ho(e,t.source):[e];for(let e=0,n=r.length;e<n;++e){const n=r[e].get("mapbox-featurestate");if(n&&n[t.id])return n[t.id]}},e.getLayer=Xo,e.getLayers=Ho,e.getMapboxLayer=Bo,e.getSource=function(e,t){const r=e.getLayers().getArray();for(let e=0,n=r.length;e<n;++e){const n=r[e].getSource();if(r[e].get("mapbox-source")===t)return n}},e.getStyleForLayer=function(e,t,r,n){const o=r.getStyleFunction();if(3===o.length)return o(e,t,n)},e.recordStyleLayer=function(e=!1){jo=e},e.removeMapboxLayer=function(e,t){const r="string"==typeof t?t:t.id,n=Xo(e,r),o=n.get("mapbox-layers");if(1===o.length)throw new Error("Cannot remove last Mapbox layer from an OpenLayers layer.");o.splice(o.indexOf(r),1);const i=e.get("mapbox-style"),a=i.layers;a.splice(a.findIndex((e=>e.id===r)),1);const s=qo[Pn(i,n)];if(s){const[e,t,n,o,i,a,l,u]=s;Array.isArray(n)&&n.splice(n.findIndex((e=>e===r)),1),To(e,t,n,o,i,a,l,u)}else Xo(e,r).changed()},e.renderTransparent=function(e){e!==ko&&(!function(){for(const e in Cn)delete Cn[e]}(),ko=e)},e.setFeatureState=function(e,t,r){const n="getLayers"in e?Ho(e,t.source):[e];for(let e=0,o=n.length;e<o;++e){const o=n[e].get("mapbox-featurestate");if(!o)throw new Error(`Map or layer for source "${t.source}" not found.`);r?o[t.id]=r:delete o[t.id],n[e].changed()}},e.stylefunction=To,e.updateMapboxLayer=function(e,t){const r=e.get("mapbox-style"),n=r.layers,o=n.findIndex((function(e){return e.id===t.id}));if(-1===o)throw new Error(`Layer with id "${t.id}" not found.`);if(n[o].source!==t.source)throw new Error("Updated layer and previous version must use the same source.");delete Dn(r)[t.id],delete On(r)[t.id],n[o]=t;const i=qo[Pn(e.get("mapbox-style"),Xo(e,t.id))];i?To.apply(void 0,i):Xo(e,t.id).changed()},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=olms.js.map
